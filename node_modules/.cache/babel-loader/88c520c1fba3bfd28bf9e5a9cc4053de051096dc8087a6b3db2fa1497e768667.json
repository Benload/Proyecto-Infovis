{"ast":null,"code":"var _jsxFileName = \"/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/MainViz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, ReferenceLine } from 'recharts';\nimport { Box, Typography, IconButton, Card, CardContent, Grid, LinearProgress, Fade, Tooltip as MuiTooltip } from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX, Trophy, Star } from 'lucide-react';\n\n// Datos de hitos importantes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst milestones = {\n  2008: {\n    title: 'Primer Balón de Oro',\n    icon: 'balon-oro.png'\n  },\n  2013: {\n    title: 'Segundo Balón de Oro',\n    icon: 'balon-oro.png'\n  },\n  2014: {\n    title: 'Tercer Balón de Oro',\n    icon: 'balon-oro.png'\n  },\n  2016: {\n    title: 'Cuarto Balón de Oro',\n    icon: 'balon-oro.png'\n  },\n  2017: {\n    title: 'Quinto Balón de Oro',\n    icon: 'balon-oro.png'\n  },\n  2016: {\n    title: 'Champions League Real Madrid',\n    icon: 'champions.png'\n  },\n  2014: {\n    title: 'Bota de Oro',\n    icon: 'golden-boot.png'\n  }\n};\nconst teams = {\n  '2002-2006': {\n    name: 'Sporting CP',\n    color: '#008542'\n  },\n  '2007-2009': {\n    name: 'Manchester United',\n    color: '#DA291C'\n  },\n  '2010-2018': {\n    name: 'Real Madrid',\n    color: '#FEBE10'\n  },\n  '2019-2022': {\n    name: 'Juventus',\n    color: '#000000'\n  },\n  '2023-': {\n    name: 'Al-Nassr',\n    color: '#FFEB3B'\n  }\n};\n\n// Sonidos para diferentes tipos de goles\nconst goalSounds = {\n  regular: new Audio('/sounds/regular-goal.mp3'),\n  penalty: new Audio('/sounds/penalty.mp3'),\n  freekick: new Audio('/sounds/freekick.mp3'),\n  header: new Audio('/sounds/header.mp3')\n};\nconst CareerPhases = {\n  'Formación (2002-2006)': {\n    color: '#4CAF50',\n    description: 'Inicio de carrera en Sporting CP y primeros años en Manchester United',\n    team: 'Sporting CP → Man United'\n  },\n  'Ascenso (2007-2009)': {\n    color: '#2196F3',\n    description: 'Consolidación en Manchester United y primer Balón de Oro',\n    team: 'Manchester United'\n  },\n  'Dominio (2010-2018)': {\n    color: '#FFC107',\n    description: 'Era dorada en Real Madrid',\n    team: 'Real Madrid'\n  },\n  'Madurez (2019-2022)': {\n    color: '#9C27B0',\n    description: 'Etapa en Juventus y regreso a Manchester United',\n    team: 'Juventus → Man United'\n  },\n  'Etapa Final (2023-)': {\n    color: '#FF5722',\n    description: 'Periodo en Al-Nassr',\n    team: 'Al-Nassr'\n  }\n};\nconst MainViz = ({\n  data\n}) => {\n  _s();\n  var _yearlyData$find;\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [selectedPhase, setSelectedPhase] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [isDrawing, setIsDrawing] = useState(true);\n  const animationRef = useRef(null);\n  const yearlyData = Object.entries(data.anos).map(([year, goals]) => {\n    const phase = getPhaseForYear(parseInt(year));\n    return {\n      year: parseInt(year),\n      goals,\n      phase,\n      phaseColor: CareerPhases[phase].color,\n      team: getTeamForYear(parseInt(year)),\n      milestone: milestones[parseInt(year)]\n    };\n  }).sort((a, b) => a.year - b.year);\n\n  // Efecto de dibujo inicial\n  useEffect(() => {\n    if (isDrawing) {\n      const duration = 2000; // 2 segundos\n      const start = Date.now();\n      const animate = () => {\n        const now = Date.now();\n        const progress = (now - start) / duration;\n        if (progress < 1) {\n          setProgress(progress);\n          requestAnimationFrame(animate);\n        } else {\n          setProgress(1);\n          setIsDrawing(false);\n        }\n      };\n      requestAnimationFrame(animate);\n    }\n  }, [isDrawing]);\n\n  // Reproducción automática\n  useEffect(() => {\n    if (isPlaying) {\n      let currentIndex = 0;\n      const playNextYear = () => {\n        if (currentIndex < yearlyData.length) {\n          const yearData = yearlyData[currentIndex];\n          setSelectedYear(yearData.year);\n          playGoalSound(yearData.goals, yearData.team);\n          currentIndex++;\n          animationRef.current = requestAnimationFrame(playNextYear);\n        } else {\n          setIsPlaying(false);\n        }\n      };\n      animationRef.current = requestAnimationFrame(playNextYear);\n      return () => {\n        if (animationRef.current) {\n          cancelAnimationFrame(animationRef.current);\n        }\n      };\n    }\n  }, [isPlaying]);\n  const playGoalSound = (goals, team) => {\n    if (!isMuted) {\n      // Elegir sonido basado en el tipo de gol\n      const sound = goals > 40 ? goalSounds.freekick : goals > 30 ? goalSounds.header : goals > 20 ? goalSounds.penalty : goalSounds.regular;\n      sound.currentTime = 0;\n      sound.play();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      gutterBottom: true,\n      sx: {\n        color: '#00BFFF'\n      },\n      children: \"La Carrera Goleadora de Cristiano Ronaldo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0,0,0,0.6)',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: Object.entries(CareerPhases).map(([phase, {\n                color,\n                description\n              }]) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 2.4,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  onClick: () => setSelectedPhase(phase === selectedPhase ? null : phase),\n                  sx: {\n                    cursor: 'pointer',\n                    p: 1,\n                    borderRadius: 1,\n                    bgcolor: selectedPhase === phase ? `${color}22` : 'transparent',\n                    '&:hover': {\n                      bgcolor: `${color}11`\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      width: '100%',\n                      height: 4,\n                      bgcolor: color,\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      color: color\n                    },\n                    children: phase\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 41\n                }, this)\n              }, phase, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0,0,0,0.6)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'center',\n                gap: 2,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setIsPlaying(!isPlaying),\n                sx: {\n                  bgcolor: 'primary.main',\n                  '&:hover': {\n                    bgcolor: 'primary.dark'\n                  }\n                },\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 50\n                }, this) : /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setIsMuted(!isMuted),\n                sx: {\n                  bgcolor: 'primary.main',\n                  '&:hover': {\n                    bgcolor: 'primary.dark'\n                  }\n                },\n                children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeX, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 48\n                }, this) : /*#__PURE__*/_jsxDEV(Volume2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 400,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: yearlyData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 20\n                },\n                onClick: data => {\n                  if (data !== null && data !== void 0 && data.activePayload) {\n                    const payload = data.activePayload[0].payload;\n                    setSelectedYear(payload.year);\n                    playGoalSound(payload.goals);\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\",\n                  stroke: \"#444\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"year\",\n                  stroke: \"#fff\",\n                  tickFormatter: year => `'${year.toString().slice(2)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  stroke: \"#fff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: ({\n                    active,\n                    payload\n                  }) => {\n                    if (active && payload !== null && payload !== void 0 && payload.length) {\n                      const data = payload[0].payload;\n                      return /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          bgcolor: 'rgba(0,0,0,0.9)',\n                          p: 2,\n                          borderRadius: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          sx: {\n                            color: data.phaseColor\n                          },\n                          children: data.phase\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h6\",\n                          sx: {\n                            color: '#fff'\n                          },\n                          children: [data.year, \": \", data.goals, \" goles\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 240,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 53\n                      }, this);\n                    }\n                    return null;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"goals\",\n                  stroke: \"#00bfff\",\n                  strokeWidth: 2,\n                  dot: ({\n                    payload\n                  }) => /*#__PURE__*/_jsxDEV(\"circle\", {\n                    r: 4,\n                    fill: payload.phaseColor,\n                    stroke: \"#fff\",\n                    strokeWidth: selectedYear === payload.year ? 2 : 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 45\n                  }, this),\n                  activeDot: {\n                    r: 8,\n                    fill: \"#fff\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), selectedYear && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              bgcolor: 'rgba(0,0,0,0.6)'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    children: [\"A\\xF1o \", selectedYear]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: [(_yearlyData$find = yearlyData.find(d => d.year === selectedYear)) === null || _yearlyData$find === void 0 ? void 0 : _yearlyData$find.goals, \" goles\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mt: 1,\n                      color: '#666'\n                    },\n                    children: CareerPhases[getPhaseForYear(selectedYear)].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 8,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: [\"Proporci\\xF3n de goles por tipo en \", selectedYear]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 45\n                  }, this), Object.entries(data.tipos_goles).map(([tipo, cantidad]) => {\n                    const porcentaje = cantidad / totalGoals * 100;\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mb: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          mb: 1\n                        },\n                        children: [tipo, \": \", cantidad, \" (\", porcentaje.toFixed(1), \"%)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                        variant: \"determinate\",\n                        value: porcentaje,\n                        sx: {\n                          height: 8,\n                          borderRadius: 4,\n                          bgcolor: 'rgba(255,255,255,0.1)',\n                          '& .MuiLinearProgress-bar': {\n                            bgcolor: CareerPhases[getPhaseForYear(selectedYear)].color\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 300,\n                        columnNumber: 57\n                      }, this)]\n                    }, tipo, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n_s(MainViz, \"Oa5PL2VFLNJg8ZDO7Z8gBFVPgA0=\");\n_c = MainViz;\nexport default MainViz;\nvar _c;\n$RefreshReg$(_c, \"MainViz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","ReferenceLine","Box","Typography","IconButton","Card","CardContent","Grid","LinearProgress","Fade","MuiTooltip","Play","Pause","Volume2","VolumeX","Trophy","Star","jsxDEV","_jsxDEV","milestones","title","icon","teams","name","color","goalSounds","regular","Audio","penalty","freekick","header","CareerPhases","description","team","MainViz","data","_s","_yearlyData$find","selectedYear","setSelectedYear","selectedPhase","setSelectedPhase","isPlaying","setIsPlaying","isMuted","setIsMuted","progress","setProgress","isDrawing","setIsDrawing","animationRef","yearlyData","Object","entries","anos","map","year","goals","phase","getPhaseForYear","parseInt","phaseColor","getTeamForYear","milestone","sort","a","b","duration","start","Date","now","animate","requestAnimationFrame","currentIndex","playNextYear","length","yearData","playGoalSound","current","cancelAnimationFrame","sound","currentTime","play","sx","maxWidth","margin","p","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","bgcolor","mb","md","onClick","cursor","borderRadius","width","height","display","justifyContent","gap","top","right","left","bottom","activePayload","payload","strokeDasharray","stroke","dataKey","tickFormatter","toString","slice","content","active","type","strokeWidth","dot","r","fill","activeDot","in","find","d","mt","tipos_goles","tipo","cantidad","porcentaje","totalGoals","toFixed","value","_c","$RefreshReg$"],"sources":["/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/MainViz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, ReferenceLine } from 'recharts';\nimport {\n    Box,\n    Typography,\n    IconButton,\n    Card,\n    CardContent,\n    Grid,\n    LinearProgress,\n    Fade,\n    Tooltip as MuiTooltip\n} from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX, Trophy, Star } from 'lucide-react';\n\n// Datos de hitos importantes\nconst milestones = {\n    2008: { title: 'Primer Balón de Oro', icon: 'balon-oro.png' },\n    2013: { title: 'Segundo Balón de Oro', icon: 'balon-oro.png' },\n    2014: { title: 'Tercer Balón de Oro', icon: 'balon-oro.png' },\n    2016: { title: 'Cuarto Balón de Oro', icon: 'balon-oro.png' },\n    2017: { title: 'Quinto Balón de Oro', icon: 'balon-oro.png' },\n    2016: { title: 'Champions League Real Madrid', icon: 'champions.png' },\n    2014: { title: 'Bota de Oro', icon: 'golden-boot.png' },\n};\n\nconst teams = {\n    '2002-2006': { name: 'Sporting CP', color: '#008542' },\n    '2007-2009': { name: 'Manchester United', color: '#DA291C' },\n    '2010-2018': { name: 'Real Madrid', color: '#FEBE10' },\n    '2019-2022': { name: 'Juventus', color: '#000000' },\n    '2023-': { name: 'Al-Nassr', color: '#FFEB3B' },\n};\n\n// Sonidos para diferentes tipos de goles\nconst goalSounds = {\n    regular: new Audio('/sounds/regular-goal.mp3'),\n    penalty: new Audio('/sounds/penalty.mp3'),\n    freekick: new Audio('/sounds/freekick.mp3'),\n    header: new Audio('/sounds/header.mp3')\n};\n\nconst CareerPhases = {\n    'Formación (2002-2006)': {\n        color: '#4CAF50',\n        description: 'Inicio de carrera en Sporting CP y primeros años en Manchester United',\n        team: 'Sporting CP → Man United'\n    },\n    'Ascenso (2007-2009)': {\n        color: '#2196F3',\n        description: 'Consolidación en Manchester United y primer Balón de Oro',\n        team: 'Manchester United'\n    },\n    'Dominio (2010-2018)': {\n        color: '#FFC107',\n        description: 'Era dorada en Real Madrid',\n        team: 'Real Madrid'\n    },\n    'Madurez (2019-2022)': {\n        color: '#9C27B0',\n        description: 'Etapa en Juventus y regreso a Manchester United',\n        team: 'Juventus → Man United'\n    },\n    'Etapa Final (2023-)': {\n        color: '#FF5722',\n        description: 'Periodo en Al-Nassr',\n        team: 'Al-Nassr'\n    }\n};\n\nconst MainViz = ({ data }) => {\n    const [selectedYear, setSelectedYear] = useState(null);\n    const [selectedPhase, setSelectedPhase] = useState(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [isDrawing, setIsDrawing] = useState(true);\n    const animationRef = useRef(null);\n\n    const yearlyData = Object.entries(data.anos)\n        .map(([year, goals]) => {\n            const phase = getPhaseForYear(parseInt(year));\n            return {\n                year: parseInt(year),\n                goals,\n                phase,\n                phaseColor: CareerPhases[phase].color,\n                team: getTeamForYear(parseInt(year)),\n                milestone: milestones[parseInt(year)]\n            };\n        })\n        .sort((a, b) => a.year - b.year);\n\n    // Efecto de dibujo inicial\n    useEffect(() => {\n        if (isDrawing) {\n            const duration = 2000; // 2 segundos\n            const start = Date.now();\n\n            const animate = () => {\n                const now = Date.now();\n                const progress = (now - start) / duration;\n\n                if (progress < 1) {\n                    setProgress(progress);\n                    requestAnimationFrame(animate);\n                } else {\n                    setProgress(1);\n                    setIsDrawing(false);\n                }\n            };\n\n            requestAnimationFrame(animate);\n        }\n    }, [isDrawing]);\n\n    // Reproducción automática\n    useEffect(() => {\n        if (isPlaying) {\n            let currentIndex = 0;\n\n            const playNextYear = () => {\n                if (currentIndex < yearlyData.length) {\n                    const yearData = yearlyData[currentIndex];\n                    setSelectedYear(yearData.year);\n                    playGoalSound(yearData.goals, yearData.team);\n                    currentIndex++;\n                    animationRef.current = requestAnimationFrame(playNextYear);\n                } else {\n                    setIsPlaying(false);\n                }\n            };\n\n            animationRef.current = requestAnimationFrame(playNextYear);\n\n            return () => {\n                if (animationRef.current) {\n                    cancelAnimationFrame(animationRef.current);\n                }\n            };\n        }\n    }, [isPlaying]);\n\n    const playGoalSound = (goals, team) => {\n        if (!isMuted) {\n            // Elegir sonido basado en el tipo de gol\n            const sound = goals > 40 ? goalSounds.freekick :\n                goals > 30 ? goalSounds.header :\n                    goals > 20 ? goalSounds.penalty :\n                        goalSounds.regular;\n\n            sound.currentTime = 0;\n            sound.play();\n        }\n    };\n\n    return (\n        <Box sx={{ maxWidth: '1200px', margin: '0 auto', p: 3 }}>\n            <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ color: '#00BFFF' }}>\n                La Carrera Goleadora de Cristiano Ronaldo\n            </Typography>\n\n            <Grid container spacing={3}>\n                {/* Fases de Carrera */}\n                <Grid item xs={12}>\n                    <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)', mb: 3 }}>\n                        <CardContent>\n                            <Grid container spacing={2}>\n                                {Object.entries(CareerPhases).map(([phase, { color, description }]) => (\n                                    <Grid item xs={12} md={2.4} key={phase}>\n                                        <Box\n                                            onClick={() => setSelectedPhase(phase === selectedPhase ? null : phase)}\n                                            sx={{\n                                                cursor: 'pointer',\n                                                p: 1,\n                                                borderRadius: 1,\n                                                bgcolor: selectedPhase === phase ? `${color}22` : 'transparent',\n                                                '&:hover': { bgcolor: `${color}11` }\n                                            }}\n                                        >\n                                            <Box sx={{ width: '100%', height: 4, bgcolor: color, mb: 1 }} />\n                                            <Typography variant=\"body2\" sx={{ color: color }}>\n                                                {phase}\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                {/* Gráfico Principal */}\n                <Grid item xs={12}>\n                    <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)' }}>\n                        <CardContent>\n                            <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mb: 2 }}>\n                                <IconButton\n                                    onClick={() => setIsPlaying(!isPlaying)}\n                                    sx={{ bgcolor: 'primary.main', '&:hover': { bgcolor: 'primary.dark' } }}\n                                >\n                                    {isPlaying ? <Pause /> : <Play />}\n                                </IconButton>\n                                <IconButton\n                                    onClick={() => setIsMuted(!isMuted)}\n                                    sx={{ bgcolor: 'primary.main', '&:hover': { bgcolor: 'primary.dark' } }}\n                                >\n                                    {isMuted ? <VolumeX /> : <Volume2 />}\n                                </IconButton>\n                            </Box>\n\n                            <ResponsiveContainer width=\"100%\" height={400}>\n                                <LineChart\n                                    data={yearlyData}\n                                    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n                                    onClick={(data) => {\n                                        if (data?.activePayload) {\n                                            const payload = data.activePayload[0].payload;\n                                            setSelectedYear(payload.year);\n                                            playGoalSound(payload.goals);\n                                        }\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#444\" />\n                                    <XAxis\n                                        dataKey=\"year\"\n                                        stroke=\"#fff\"\n                                        tickFormatter={(year) => `'${year.toString().slice(2)}`}\n                                    />\n                                    <YAxis stroke=\"#fff\" />\n                                    <Tooltip\n                                        content={({ active, payload }) => {\n                                            if (active && payload?.length) {\n                                                const data = payload[0].payload;\n                                                return (\n                                                    <Box sx={{ bgcolor: 'rgba(0,0,0,0.9)', p: 2, borderRadius: 1 }}>\n                                                        <Typography sx={{ color: data.phaseColor }}>\n                                                            {data.phase}\n                                                        </Typography>\n                                                        <Typography variant=\"h6\" sx={{ color: '#fff' }}>\n                                                            {data.year}: {data.goals} goles\n                                                        </Typography>\n                                                    </Box>\n                                                );\n                                            }\n                                            return null;\n                                        }}\n                                    />\n                                    <Line\n                                        type=\"monotone\"\n                                        dataKey=\"goals\"\n                                        stroke=\"#00bfff\"\n                                        strokeWidth={2}\n                                        dot={({ payload }) => (\n                                            <circle\n                                                r={4}\n                                                fill={payload.phaseColor}\n                                                stroke=\"#fff\"\n                                                strokeWidth={selectedYear === payload.year ? 2 : 0}\n                                            />\n                                        )}\n                                        activeDot={{ r: 8, fill: \"#fff\" }}\n                                    />\n                                </LineChart>\n                            </ResponsiveContainer>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                {/* Detalles */}\n                {selectedYear && (\n                    <Grid item xs={12}>\n                        <Fade in>\n                            <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)' }}>\n                                <CardContent>\n                                    <Grid container spacing={3}>\n                                        <Grid item xs={12} md={4}>\n                                            <Typography variant=\"h6\" gutterBottom>\n                                                Año {selectedYear}\n                                            </Typography>\n                                            <Typography variant=\"body1\">\n                                                {yearlyData.find(d => d.year === selectedYear)?.goals} goles\n                                            </Typography>\n                                            <Typography variant=\"body2\" sx={{ mt: 1, color: '#666' }}>\n                                                {CareerPhases[getPhaseForYear(selectedYear)].description}\n                                            </Typography>\n                                        </Grid>\n\n                                        <Grid item xs={12} md={8}>\n                                            <Typography variant=\"subtitle1\" gutterBottom>\n                                                Proporción de goles por tipo en {selectedYear}\n                                            </Typography>\n                                            {Object.entries(data.tipos_goles).map(([tipo, cantidad]) => {\n                                                const porcentaje = (cantidad / totalGoals) * 100;\n                                                return (\n                                                    <Box key={tipo} sx={{ mb: 2 }}>\n                                                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                                                            {tipo}: {cantidad} ({porcentaje.toFixed(1)}%)\n                                                        </Typography>\n                                                        <LinearProgress\n                                                            variant=\"determinate\"\n                                                            value={porcentaje}\n                                                            sx={{\n                                                                height: 8,\n                                                                borderRadius: 4,\n                                                                bgcolor: 'rgba(255,255,255,0.1)',\n                                                                '& .MuiLinearProgress-bar': {\n                                                                    bgcolor: CareerPhases[getPhaseForYear(selectedYear)].color\n                                                                }\n                                                            }}\n                                                        />\n                                                    </Box>\n                                                );\n                                            })}\n                                        </Grid>\n                                    </Grid>\n                                </CardContent>\n                            </Card>\n                        </Fade>\n                    </Grid>\n                )}\n            </Grid>\n        </Box>\n    );\n};\n\nexport default MainViz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}