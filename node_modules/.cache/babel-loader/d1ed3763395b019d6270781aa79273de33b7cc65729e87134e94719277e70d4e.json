{"ast":null,"code":"var _jsxFileName = \"/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/MainViz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid, ReferenceDot } from 'recharts';\nimport { Box, Typography, IconButton, Card, CardContent, Grid, LinearProgress, Fade } from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CareerPhases = {\n  'Formación (2002-2006)': {\n    color: '#4CAF50',\n    description: 'Inicio de carrera en Sporting CP y primeros años en Manchester United',\n    detailedDescription: `Periodo de formación inicial en Sporting CP antes de su histórico \n    fichaje por el Manchester United en 2003. Durante estos años, Ronaldo desarrolló su \n    característico estilo de juego y comenzó a mostrar destellos de su futura grandeza.`,\n    baseNote: 261.63 // Do4\n  },\n  'Ascenso (2007-2009)': {\n    color: '#2196F3',\n    description: 'Consolidación en Manchester United y primer Balón de Oro',\n    detailedDescription: `Etapa de consolidación en el Manchester United donde alcanzó su \n    primer Balón de Oro en 2008. Sus actuaciones llevaron al equipo a ganar la Champions \n    League y establecerse como uno de los mejores jugadores del mundo.`,\n    baseNote: 329.63 // Mi4\n  },\n  'Dominio (2010-2018)': {\n    color: '#FFC107',\n    description: 'Era dorada en Real Madrid',\n    detailedDescription: `Periodo más exitoso en el Real Madrid, donde se convirtió en el \n    máximo goleador histórico del club. Ganó cuatro Champions League y cuatro Balones de \n    Oro, estableciendo numerosos récords de goles.`,\n    baseNote: 392.00 // Sol4\n  },\n  'Madurez (2019-2022)': {\n    color: '#9C27B0',\n    description: 'Etapa en Juventus y regreso a Manchester United',\n    detailedDescription: `Periodo en Juventus donde ganó dos Series A y regreso al Manchester \n    United. Demostró su capacidad goleadora en nuevos desafíos y superó el récord de goles \n    internacionales con Portugal.`,\n    baseNote: 440.00 // La4\n  },\n  'Etapa Final (2023-)': {\n    color: '#FF5722',\n    description: 'Periodo en Al-Nassr',\n    detailedDescription: `Nueva fase en Al-Nassr donde continúa demostrando su capacidad \n    goleadora y expandiendo su influencia global en el fútbol. Mantiene su nivel competitivo \n    y sigue rompiendo récords.`,\n    baseNote: 523.25 // Do5\n  }\n};\nconst getPhaseForYear = year => {\n  if (year <= 2006) return 'Formación (2002-2006)';\n  if (year <= 2009) return 'Ascenso (2007-2009)';\n  if (year <= 2018) return 'Dominio (2010-2018)';\n  if (year <= 2022) return 'Madurez (2019-2022)';\n  return 'Etapa Final (2023-)';\n};\nconst MainViz = ({\n  data\n}) => {\n  _s();\n  var _yearlyData$find;\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [selectedPhase, setSelectedPhase] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [playbackIndex, setPlaybackIndex] = useState(0);\n  const intervalRef = useRef(null);\n  const yearlyData = useMemo(() => {\n    return Object.entries(data.anos).map(([year, goals]) => {\n      const phase = getPhaseForYear(parseInt(year));\n      return {\n        year: parseInt(year),\n        goals,\n        phase,\n        phaseColor: CareerPhases[phase].color\n      };\n    }).sort((a, b) => a.year - b.year);\n  }, [data.anos]);\n  const totalGoals = useMemo(() => {\n    return Object.values(data.clubes).reduce((a, b) => a + b, 0);\n  }, [data.clubes]);\n  const playNote = frequency => {\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n    oscillator.type = 'sine';\n    oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);\n    gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n    gainNode.gain.linearRampToValueAtTime(0.5, audioContext.currentTime + 0.05);\n    gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.5);\n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n    oscillator.start();\n    oscillator.stop(audioContext.currentTime + 0.5);\n  };\n  const playGoalSound = (goals, phase) => {\n    if (!isMuted) {\n      const baseNote = CareerPhases[phase].baseNote;\n      const noteModifier = Math.min(goals / 40 * 100, 200);\n      const frequency = baseNote + noteModifier;\n      playNote(frequency);\n    }\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      setPlaybackIndex(0); // Reiniciar playbackIndex al iniciar\n      intervalRef.current = setInterval(() => {\n        setPlaybackIndex(prevIndex => {\n          if (prevIndex < yearlyData.length - 1) {\n            return prevIndex + 1;\n          } else {\n            clearInterval(intervalRef.current);\n            setIsPlaying(false);\n            return prevIndex + 1; // Asegurar que la última nota se reproduzca\n          }\n        });\n      }, 2000);\n      return () => clearInterval(intervalRef.current);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n  }, [isPlaying, yearlyData.length]);\n  useEffect(() => {\n    if (playbackIndex < yearlyData.length) {\n      const currentData = yearlyData[playbackIndex];\n      setSelectedYear(currentData.year);\n      if (isPlaying) {\n        playGoalSound(currentData.goals, currentData.phase);\n      }\n    }\n  }, [playbackIndex, isPlaying, yearlyData]);\n  const handlePlayPause = () => {\n    if (!isPlaying) {\n      setPlaybackIndex(0); // Reiniciar playbackIndex al iniciar\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handlePhaseClick = phase => {\n    setSelectedPhase(phase === selectedPhase ? null : phase);\n  };\n  const handleDataClick = data => {\n    if (data && data.activePayload) {\n      const payload = data.activePayload[0].payload;\n      setSelectedYear(payload.year);\n      playGoalSound(payload.goals, payload.phase);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      align: \"center\",\n      gutterBottom: true,\n      sx: {\n        color: '#00BFFF',\n        fontSize: '4rem',\n        mb: 4,\n        fontWeight: 'bold'\n      },\n      children: \"La Carrera Goleadora de Cristiano Ronaldo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0,0,0,0.6)',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: Object.entries(CareerPhases).map(([phase, {\n                color,\n                description\n              }]) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 2.4,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  onClick: () => handlePhaseClick(phase),\n                  sx: {\n                    cursor: 'pointer',\n                    p: 1,\n                    borderRadius: 1,\n                    bgcolor: selectedPhase === phase ? `${color}22` : 'transparent',\n                    '&:hover': {\n                      bgcolor: `${color}11`\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      width: '100%',\n                      height: 4,\n                      bgcolor: color,\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      color: color,\n                      fontSize: '1.3rem',\n                      fontWeight: selectedPhase === phase ? 'bold' : 'normal'\n                    },\n                    children: phase\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 45\n                }, this)\n              }, phase, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0,0,0,0.6)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'center',\n                gap: 2,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handlePlayPause,\n                sx: {\n                  bgcolor: 'primary.main',\n                  '&:hover': {\n                    bgcolor: 'primary.dark'\n                  },\n                  color: 'white',\n                  p: 2\n                },\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {\n                  size: 28\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 50\n                }, this) : /*#__PURE__*/_jsxDEV(Play, {\n                  size: 28\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 72\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setIsMuted(!isMuted),\n                sx: {\n                  bgcolor: 'primary.main',\n                  '&:hover': {\n                    bgcolor: 'primary.dark'\n                  },\n                  color: 'white',\n                  p: 2\n                },\n                children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeX, {\n                  size: 28\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 48\n                }, this) : /*#__PURE__*/_jsxDEV(Volume2, {\n                  size: 28\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 72\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 400,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: yearlyData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 40,\n                  bottom: 20\n                },\n                onClick: handleDataClick,\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\",\n                  stroke: \"#444\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"year\",\n                  stroke: \"#fff\",\n                  tickFormatter: year => `'${year.toString().slice(2)}`,\n                  label: {\n                    value: 'Año',\n                    position: 'bottom',\n                    offset: 0,\n                    fill: '#fff',\n                    fontSize: 18\n                  },\n                  tick: {\n                    fontSize: 16\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  stroke: \"#fff\",\n                  label: {\n                    value: 'Goles por Año',\n                    angle: -90,\n                    position: 'insideLeft',\n                    offset: -10,\n                    fill: '#fff',\n                    fontSize: 18\n                  },\n                  tick: {\n                    fontSize: 16\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: ({\n                    active,\n                    payload\n                  }) => {\n                    if (active && payload !== null && payload !== void 0 && payload.length) {\n                      const data = payload[0].payload;\n                      return /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          bgcolor: 'rgba(0,0,0,0.9)',\n                          p: 2,\n                          borderRadius: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          sx: {\n                            color: data.phaseColor,\n                            fontSize: '1.3rem'\n                          },\n                          children: data.phase\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 326,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h6\",\n                          sx: {\n                            color: '#fff',\n                            fontSize: '1.5rem'\n                          },\n                          children: [data.year, \": \", data.goals, \" goles\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 334,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 53\n                      }, this);\n                    }\n                    return null;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"goals\",\n                  stroke: \"#00bfff\",\n                  strokeWidth: 2,\n                  dot: ({\n                    cx,\n                    cy,\n                    payload\n                  }) => /*#__PURE__*/_jsxDEV(\"circle\", {\n                    cx: cx,\n                    cy: cy,\n                    r: payload.year === selectedYear ? 6 : 4,\n                    fill: payload.phaseColor,\n                    stroke: \"#fff\",\n                    strokeWidth: payload.year === selectedYear ? 2 : 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 45\n                  }, this),\n                  activeDot: {\n                    r: 8,\n                    fill: '#fff'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 37\n                }, this), selectedYear && /*#__PURE__*/_jsxDEV(ReferenceDot, {\n                  x: selectedYear,\n                  y: 0 // Posicionar en el eje X\n                  ,\n                  r: 8,\n                  fill: \"#fff\",\n                  stroke: \"#00bfff\",\n                  strokeWidth: 3,\n                  ifOverflow: \"extendDomain\" // Asegurar que el punto se muestre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), selectedYear && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              bgcolor: 'rgba(0,0,0,0.6)'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    gutterBottom: true,\n                    sx: {\n                      color: '#00BFFF',\n                      fontSize: '2.2rem',\n                      mb: 2\n                    },\n                    children: [\"A\\xF1o \", selectedYear]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    sx: {\n                      mb: 2,\n                      fontSize: '1.8rem',\n                      color: CareerPhases[getPhaseForYear(selectedYear)].color\n                    },\n                    children: [(_yearlyData$find = yearlyData.find(d => d.year === selectedYear)) === null || _yearlyData$find === void 0 ? void 0 : _yearlyData$find.goals, ' ', \"goles\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      mt: 2,\n                      color: '#fff',\n                      lineHeight: 1.8,\n                      textAlign: 'justify',\n                      fontSize: '1.3rem'\n                    },\n                    children: CareerPhases[getPhaseForYear(selectedYear)].detailedDescription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 8,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    sx: {\n                      color: '#00BFFF',\n                      fontSize: '1.8rem',\n                      mb: 3\n                    },\n                    children: \"Proporci\\xF3n de goles por tipo en carrera completa\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 45\n                  }, this), Object.entries(data.tipos_goles).map(([tipo, cantidad]) => {\n                    const porcentaje = cantidad / totalGoals * 100;\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mb: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body1\",\n                        sx: {\n                          mb: 1,\n                          fontSize: '1.3rem',\n                          color: '#fff'\n                        },\n                        children: [tipo, \": \", cantidad, \" (\", porcentaje.toFixed(1), \"%)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 457,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                        variant: \"determinate\",\n                        value: porcentaje,\n                        sx: {\n                          height: 8,\n                          borderRadius: 4,\n                          bgcolor: 'rgba(255,255,255,0.1)',\n                          '& .MuiLinearProgress-bar': {\n                            bgcolor: CareerPhases[getPhaseForYear(selectedYear)].color\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 468,\n                        columnNumber: 61\n                      }, this)]\n                    }, tipo, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 57\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n};\n_s(MainViz, \"4FuLnqUqeBExX1dbCNS8Kb232t8=\");\n_c = MainViz;\nexport default MainViz;\nvar _c;\n$RefreshReg$(_c, \"MainViz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","ReferenceDot","Box","Typography","IconButton","Card","CardContent","Grid","LinearProgress","Fade","Play","Pause","Volume2","VolumeX","jsxDEV","_jsxDEV","CareerPhases","color","description","detailedDescription","baseNote","getPhaseForYear","year","MainViz","data","_s","_yearlyData$find","selectedYear","setSelectedYear","selectedPhase","setSelectedPhase","isPlaying","setIsPlaying","isMuted","setIsMuted","playbackIndex","setPlaybackIndex","intervalRef","yearlyData","Object","entries","anos","map","goals","phase","parseInt","phaseColor","sort","a","b","totalGoals","values","clubes","reduce","playNote","frequency","audioContext","window","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","type","setValueAtTime","currentTime","gain","linearRampToValueAtTime","connect","destination","start","stop","playGoalSound","noteModifier","Math","min","current","setInterval","prevIndex","length","clearInterval","currentData","handlePlayPause","handlePhaseClick","handleDataClick","activePayload","payload","sx","maxWidth","margin","p","children","variant","align","gutterBottom","fontSize","mb","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","bgcolor","md","onClick","cursor","borderRadius","width","height","display","justifyContent","gap","size","top","right","left","bottom","strokeDasharray","stroke","dataKey","tickFormatter","toString","slice","label","value","position","offset","fill","tick","angle","content","active","strokeWidth","dot","cx","cy","r","activeDot","x","y","ifOverflow","in","find","d","mt","lineHeight","textAlign","tipos_goles","tipo","cantidad","porcentaje","toFixed","_c","$RefreshReg$"],"sources":["/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/MainViz.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    Tooltip,\n    ResponsiveContainer,\n    CartesianGrid,\n    ReferenceDot\n} from 'recharts';\nimport {\n    Box,\n    Typography,\n    IconButton,\n    Card,\n    CardContent,\n    Grid,\n    LinearProgress,\n    Fade\n} from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX } from 'lucide-react';\n\nconst CareerPhases = {\n    'Formación (2002-2006)': {\n        color: '#4CAF50',\n        description: 'Inicio de carrera en Sporting CP y primeros años en Manchester United',\n        detailedDescription: `Periodo de formación inicial en Sporting CP antes de su histórico \n    fichaje por el Manchester United en 2003. Durante estos años, Ronaldo desarrolló su \n    característico estilo de juego y comenzó a mostrar destellos de su futura grandeza.`,\n        baseNote: 261.63 // Do4\n    },\n    'Ascenso (2007-2009)': {\n        color: '#2196F3',\n        description: 'Consolidación en Manchester United y primer Balón de Oro',\n        detailedDescription: `Etapa de consolidación en el Manchester United donde alcanzó su \n    primer Balón de Oro en 2008. Sus actuaciones llevaron al equipo a ganar la Champions \n    League y establecerse como uno de los mejores jugadores del mundo.`,\n        baseNote: 329.63 // Mi4\n    },\n    'Dominio (2010-2018)': {\n        color: '#FFC107',\n        description: 'Era dorada en Real Madrid',\n        detailedDescription: `Periodo más exitoso en el Real Madrid, donde se convirtió en el \n    máximo goleador histórico del club. Ganó cuatro Champions League y cuatro Balones de \n    Oro, estableciendo numerosos récords de goles.`,\n        baseNote: 392.00 // Sol4\n    },\n    'Madurez (2019-2022)': {\n        color: '#9C27B0',\n        description: 'Etapa en Juventus y regreso a Manchester United',\n        detailedDescription: `Periodo en Juventus donde ganó dos Series A y regreso al Manchester \n    United. Demostró su capacidad goleadora en nuevos desafíos y superó el récord de goles \n    internacionales con Portugal.`,\n        baseNote: 440.00 // La4\n    },\n    'Etapa Final (2023-)': {\n        color: '#FF5722',\n        description: 'Periodo en Al-Nassr',\n        detailedDescription: `Nueva fase en Al-Nassr donde continúa demostrando su capacidad \n    goleadora y expandiendo su influencia global en el fútbol. Mantiene su nivel competitivo \n    y sigue rompiendo récords.`,\n        baseNote: 523.25 // Do5\n    }\n};\n\nconst getPhaseForYear = (year) => {\n    if (year <= 2006) return 'Formación (2002-2006)';\n    if (year <= 2009) return 'Ascenso (2007-2009)';\n    if (year <= 2018) return 'Dominio (2010-2018)';\n    if (year <= 2022) return 'Madurez (2019-2022)';\n    return 'Etapa Final (2023-)';\n};\n\nconst MainViz = ({ data }) => {\n    const [selectedYear, setSelectedYear] = useState(null);\n    const [selectedPhase, setSelectedPhase] = useState(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    const [playbackIndex, setPlaybackIndex] = useState(0);\n    const intervalRef = useRef(null);\n\n    const yearlyData = useMemo(() => {\n        return Object.entries(data.anos)\n            .map(([year, goals]) => {\n                const phase = getPhaseForYear(parseInt(year));\n                return {\n                    year: parseInt(year),\n                    goals,\n                    phase,\n                    phaseColor: CareerPhases[phase].color\n                };\n            })\n            .sort((a, b) => a.year - b.year);\n    }, [data.anos]);\n\n    const totalGoals = useMemo(() => {\n        return Object.values(data.clubes).reduce((a, b) => a + b, 0);\n    }, [data.clubes]);\n\n    const playNote = (frequency) => {\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        const oscillator = audioContext.createOscillator();\n        const gainNode = audioContext.createGain();\n\n        oscillator.type = 'sine';\n        oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);\n\n        gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n        gainNode.gain.linearRampToValueAtTime(0.5, audioContext.currentTime + 0.05);\n        gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.5);\n\n        oscillator.connect(gainNode);\n        gainNode.connect(audioContext.destination);\n\n        oscillator.start();\n        oscillator.stop(audioContext.currentTime + 0.5);\n    };\n\n    const playGoalSound = (goals, phase) => {\n        if (!isMuted) {\n            const baseNote = CareerPhases[phase].baseNote;\n            const noteModifier = Math.min((goals / 40) * 100, 200);\n            const frequency = baseNote + noteModifier;\n            playNote(frequency);\n        }\n    };\n\n    useEffect(() => {\n        if (isPlaying) {\n            setPlaybackIndex(0); // Reiniciar playbackIndex al iniciar\n            intervalRef.current = setInterval(() => {\n                setPlaybackIndex((prevIndex) => {\n                    if (prevIndex < yearlyData.length - 1) {\n                        return prevIndex + 1;\n                    } else {\n                        clearInterval(intervalRef.current);\n                        setIsPlaying(false);\n                        return prevIndex + 1; // Asegurar que la última nota se reproduzca\n                    }\n                });\n            }, 2000);\n            return () => clearInterval(intervalRef.current);\n        } else {\n            clearInterval(intervalRef.current);\n        }\n    }, [isPlaying, yearlyData.length]);\n\n    useEffect(() => {\n        if (playbackIndex < yearlyData.length) {\n            const currentData = yearlyData[playbackIndex];\n            setSelectedYear(currentData.year);\n            if (isPlaying) {\n                playGoalSound(currentData.goals, currentData.phase);\n            }\n        }\n    }, [playbackIndex, isPlaying, yearlyData]);\n\n    const handlePlayPause = () => {\n        if (!isPlaying) {\n            setPlaybackIndex(0); // Reiniciar playbackIndex al iniciar\n        }\n        setIsPlaying(!isPlaying);\n    };\n\n    const handlePhaseClick = (phase) => {\n        setSelectedPhase(phase === selectedPhase ? null : phase);\n    };\n\n    const handleDataClick = (data) => {\n        if (data && data.activePayload) {\n            const payload = data.activePayload[0].payload;\n            setSelectedYear(payload.year);\n            playGoalSound(payload.goals, payload.phase);\n        }\n    };\n\n    return (\n        <Box sx={{ maxWidth: '1200px', margin: '0 auto', p: 3 }}>\n            <Typography\n                variant=\"h2\"\n                align=\"center\"\n                gutterBottom\n                sx={{\n                    color: '#00BFFF',\n                    fontSize: '4rem',\n                    mb: 4,\n                    fontWeight: 'bold'\n                }}\n            >\n                La Carrera Goleadora de Cristiano Ronaldo\n            </Typography>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)', mb: 3 }}>\n                        <CardContent>\n                            <Grid container spacing={2}>\n                                {Object.entries(CareerPhases).map(\n                                    ([phase, { color, description }]) => (\n                                        <Grid item xs={12} md={2.4} key={phase}>\n                                            <Box\n                                                onClick={() => handlePhaseClick(phase)}\n                                                sx={{\n                                                    cursor: 'pointer',\n                                                    p: 1,\n                                                    borderRadius: 1,\n                                                    bgcolor:\n                                                        selectedPhase === phase\n                                                            ? `${color}22`\n                                                            : 'transparent',\n                                                    '&:hover': { bgcolor: `${color}11` }\n                                                }}\n                                            >\n                                                <Box\n                                                    sx={{\n                                                        width: '100%',\n                                                        height: 4,\n                                                        bgcolor: color,\n                                                        mb: 1\n                                                    }}\n                                                />\n                                                <Typography\n                                                    variant=\"body1\"\n                                                    sx={{\n                                                        color: color,\n                                                        fontSize: '1.3rem',\n                                                        fontWeight:\n                                                            selectedPhase === phase\n                                                                ? 'bold'\n                                                                : 'normal'\n                                                    }}\n                                                >\n                                                    {phase}\n                                                </Typography>\n                                            </Box>\n                                        </Grid>\n                                    )\n                                )}\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)' }}>\n                        <CardContent>\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    gap: 2,\n                                    mb: 2\n                                }}\n                            >\n                                <IconButton\n                                    onClick={handlePlayPause}\n                                    sx={{\n                                        bgcolor: 'primary.main',\n                                        '&:hover': { bgcolor: 'primary.dark' },\n                                        color: 'white',\n                                        p: 2\n                                    }}\n                                >\n                                    {isPlaying ? <Pause size={28} /> : <Play size={28} />}\n                                </IconButton>\n                                <IconButton\n                                    onClick={() => setIsMuted(!isMuted)}\n                                    sx={{\n                                        bgcolor: 'primary.main',\n                                        '&:hover': { bgcolor: 'primary.dark' },\n                                        color: 'white',\n                                        p: 2\n                                    }}\n                                >\n                                    {isMuted ? <VolumeX size={28} /> : <Volume2 size={28} />}\n                                </IconButton>\n                            </Box>\n\n                            <ResponsiveContainer width=\"100%\" height={400}>\n                                <LineChart\n                                    data={yearlyData}\n                                    margin={{ top: 20, right: 30, left: 40, bottom: 20 }}\n                                    onClick={handleDataClick}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#444\" />\n                                    <XAxis\n                                        dataKey=\"year\"\n                                        stroke=\"#fff\"\n                                        tickFormatter={(year) =>\n                                            `'${year.toString().slice(2)}`\n                                        }\n                                        label={{\n                                            value: 'Año',\n                                            position: 'bottom',\n                                            offset: 0,\n                                            fill: '#fff',\n                                            fontSize: 18\n                                        }}\n                                        tick={{ fontSize: 16 }}\n                                    />\n                                    <YAxis\n                                        stroke=\"#fff\"\n                                        label={{\n                                            value: 'Goles por Año',\n                                            angle: -90,\n                                            position: 'insideLeft',\n                                            offset: -10,\n                                            fill: '#fff',\n                                            fontSize: 18\n                                        }}\n                                        tick={{ fontSize: 16 }}\n                                    />\n                                    <Tooltip\n                                        content={({ active, payload }) => {\n                                            if (active && payload?.length) {\n                                                const data = payload[0].payload;\n                                                return (\n                                                    <Box\n                                                        sx={{\n                                                            bgcolor: 'rgba(0,0,0,0.9)',\n                                                            p: 2,\n                                                            borderRadius: 1\n                                                        }}\n                                                    >\n                                                        <Typography\n                                                            sx={{\n                                                                color: data.phaseColor,\n                                                                fontSize: '1.3rem'\n                                                            }}\n                                                        >\n                                                            {data.phase}\n                                                        </Typography>\n                                                        <Typography\n                                                            variant=\"h6\"\n                                                            sx={{\n                                                                color: '#fff',\n                                                                fontSize: '1.5rem'\n                                                            }}\n                                                        >\n                                                            {data.year}: {data.goals} goles\n                                                        </Typography>\n                                                    </Box>\n                                                );\n                                            }\n                                            return null;\n                                        }}\n                                    />\n                                    <Line\n                                        type=\"monotone\"\n                                        dataKey=\"goals\"\n                                        stroke=\"#00bfff\"\n                                        strokeWidth={2}\n                                        dot={({ cx, cy, payload }) => (\n                                            <circle\n                                                cx={cx}\n                                                cy={cy}\n                                                r={payload.year === selectedYear ? 6 : 4}\n                                                fill={payload.phaseColor}\n                                                stroke=\"#fff\"\n                                                strokeWidth={\n                                                    payload.year === selectedYear ? 2 : 0\n                                                }\n                                            />\n                                        )}\n                                        activeDot={{ r: 8, fill: '#fff' }}\n                                    />\n                                    {selectedYear && (\n                                        <ReferenceDot\n                                            x={selectedYear}\n                                            y={0} // Posicionar en el eje X\n                                            r={8}\n                                            fill=\"#fff\"\n                                            stroke=\"#00bfff\"\n                                            strokeWidth={3}\n                                            ifOverflow=\"extendDomain\" // Asegurar que el punto se muestre\n                                        />\n                                    )}\n                                </LineChart>\n                            </ResponsiveContainer>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                {selectedYear && (\n                    <Grid item xs={12}>\n                        <Fade in>\n                            <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)' }}>\n                                <CardContent>\n                                    <Grid container spacing={3}>\n                                        <Grid item xs={12} md={4}>\n                                            <Typography\n                                                variant=\"h5\"\n                                                gutterBottom\n                                                sx={{\n                                                    color: '#00BFFF',\n                                                    fontSize: '2.2rem',\n                                                    mb: 2\n                                                }}\n                                            >\n                                                Año {selectedYear}\n                                            </Typography>\n                                            <Typography\n                                                variant=\"h6\"\n                                                sx={{\n                                                    mb: 2,\n                                                    fontSize: '1.8rem',\n                                                    color:\n                                                        CareerPhases[\n                                                            getPhaseForYear(selectedYear)\n                                                        ].color\n                                                }}\n                                            >\n                                                {\n                                                    yearlyData.find(\n                                                        (d) => d.year === selectedYear\n                                                    )?.goals\n                                                }{' '}\n                                                goles\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body1\"\n                                                sx={{\n                                                    mt: 2,\n                                                    color: '#fff',\n                                                    lineHeight: 1.8,\n                                                    textAlign: 'justify',\n                                                    fontSize: '1.3rem'\n                                                }}\n                                            >\n                                                {\n                                                    CareerPhases[\n                                                        getPhaseForYear(selectedYear)\n                                                    ].detailedDescription\n                                                }\n                                            </Typography>\n                                        </Grid>\n\n                                        <Grid item xs={12} md={8}>\n                                            <Typography\n                                                variant=\"h6\"\n                                                gutterBottom\n                                                sx={{\n                                                    color: '#00BFFF',\n                                                    fontSize: '1.8rem',\n                                                    mb: 3\n                                                }}\n                                            >\n                                                Proporción de goles por tipo en carrera completa\n                                            </Typography>\n                                            {Object.entries(data.tipos_goles).map(\n                                                ([tipo, cantidad]) => {\n                                                    const porcentaje =\n                                                        (cantidad / totalGoals) * 100;\n                                                    return (\n                                                        <Box key={tipo} sx={{ mb: 2 }}>\n                                                            <Typography\n                                                                variant=\"body1\"\n                                                                sx={{\n                                                                    mb: 1,\n                                                                    fontSize: '1.3rem',\n                                                                    color: '#fff'\n                                                                }}\n                                                            >\n                                                                {tipo}: {cantidad} (\n                                                                {porcentaje.toFixed(1)}%)\n                                                            </Typography>\n                                                            <LinearProgress\n                                                                variant=\"determinate\"\n                                                                value={porcentaje}\n                                                                sx={{\n                                                                    height: 8,\n                                                                    borderRadius: 4,\n                                                                    bgcolor:\n                                                                        'rgba(255,255,255,0.1)',\n                                                                    '& .MuiLinearProgress-bar': {\n                                                                        bgcolor:\n                                                                            CareerPhases[\n                                                                                getPhaseForYear(\n                                                                                    selectedYear\n                                                                                )\n                                                                            ].color\n                                                                    }\n                                                                }}\n                                                            />\n                                                        </Box>\n                                                    );\n                                                }\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </CardContent>\n                            </Card>\n                        </Fade>\n                    </Grid>\n                )}\n            </Grid>\n        </Box>\n    );\n};\n\nexport default MainViz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}