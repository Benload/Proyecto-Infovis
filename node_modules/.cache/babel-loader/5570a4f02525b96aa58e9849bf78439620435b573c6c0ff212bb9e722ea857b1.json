{"ast":null,"code":"var _jsxFileName = \"/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/MainViz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nimport { Box, Typography, IconButton, Card, CardContent, Grid, LinearProgress, Fade } from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX, Info } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CareerPhases = {\n  'Formación (2002-2006)': {\n    color: '#4CAF50',\n    description: 'Inicio de carrera en Sporting CP y primeros años en Manchester United'\n  },\n  'Ascenso (2007-2009)': {\n    color: '#2196F3',\n    description: 'Consolidación en Manchester United y primer Balón de Oro'\n  },\n  'Dominio (2010-2018)': {\n    color: '#FFC107',\n    description: 'Era dorada en Real Madrid'\n  },\n  'Madurez (2019-2022)': {\n    color: '#9C27B0',\n    description: 'Etapa en Juventus y regreso a Manchester United'\n  },\n  'Etapa Final (2023-)': {\n    color: '#FF5722',\n    description: 'Periodo en Al-Nassr'\n  }\n};\nconst getPhaseForYear = year => {\n  if (year <= 2006) return 'Formación (2002-2006)';\n  if (year <= 2009) return 'Ascenso (2007-2009)';\n  if (year <= 2018) return 'Dominio (2010-2018)';\n  if (year <= 2022) return 'Madurez (2019-2022)';\n  return 'Etapa Final (2023-)';\n};\nconst MainViz = ({\n  data\n}) => {\n  _s();\n  var _yearlyData$find;\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [selectedPhase, setSelectedPhase] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [oscillator, setOscillator] = useState(null);\n  const [audioContext, setAudioContext] = useState(null);\n  useEffect(() => {\n    const context = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(context);\n    return () => context === null || context === void 0 ? void 0 : context.close();\n  }, []);\n  const yearlyData = Object.entries(data.anos).map(([year, goals]) => {\n    const phase = getPhaseForYear(parseInt(year));\n    return {\n      year: parseInt(year),\n      goals,\n      phase,\n      phaseColor: CareerPhases[phase].color\n    };\n  }).sort((a, b) => a.year - b.year);\n  const totalGoals = Object.values(data.clubes).reduce((a, b) => a + b, 0);\n  const maxGoalsInYear = Math.max(...Object.values(data.anos));\n  const playGoalSound = goals => {\n    if (!isMuted && audioContext) {\n      if (oscillator) oscillator.stop();\n      const osc = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      const frequency = 220 + goals / maxGoalsInYear * 660;\n      osc.type = 'sine';\n      osc.frequency.setValueAtTime(frequency, audioContext.currentTime);\n      gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n      gainNode.gain.linearRampToValueAtTime(0.3, audioContext.currentTime + 0.01);\n      gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.3);\n      osc.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n      osc.start();\n      osc.stop(audioContext.currentTime + 0.3);\n      setOscillator(osc);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      gutterBottom: true,\n      sx: {\n        color: '#00BFFF'\n      },\n      children: \"La Carrera Goleadora de Cristiano Ronaldo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0,0,0,0.6)',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: Object.entries(CareerPhases).map(([phase, {\n                color,\n                description\n              }]) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 2.4,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  onClick: () => setSelectedPhase(phase === selectedPhase ? null : phase),\n                  sx: {\n                    cursor: 'pointer',\n                    p: 1,\n                    borderRadius: 1,\n                    bgcolor: selectedPhase === phase ? `${color}22` : 'transparent',\n                    '&:hover': {\n                      bgcolor: `${color}11`\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      width: '100%',\n                      height: 4,\n                      bgcolor: color,\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      color: color\n                    },\n                    children: phase\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this)\n              }, phase, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0,0,0,0.6)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'center',\n                gap: 2,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setIsPlaying(!isPlaying),\n                sx: {\n                  bgcolor: 'primary.main',\n                  '&:hover': {\n                    bgcolor: 'primary.dark'\n                  }\n                },\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 50\n                }, this) : /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setIsMuted(!isMuted),\n                sx: {\n                  bgcolor: 'primary.main',\n                  '&:hover': {\n                    bgcolor: 'primary.dark'\n                  }\n                },\n                children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeX, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 48\n                }, this) : /*#__PURE__*/_jsxDEV(Volume2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 400,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: yearlyData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 20\n                },\n                onClick: data => {\n                  if (data !== null && data !== void 0 && data.activePayload) {\n                    const payload = data.activePayload[0].payload;\n                    setSelectedYear(payload.year);\n                    playGoalSound(payload.goals);\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\",\n                  stroke: \"#444\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"year\",\n                  stroke: \"#fff\",\n                  tickFormatter: year => `'${year.toString().slice(2)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  stroke: \"#fff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: ({\n                    active,\n                    payload\n                  }) => {\n                    if (active && payload !== null && payload !== void 0 && payload.length) {\n                      const data = payload[0].payload;\n                      return /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          bgcolor: 'rgba(0,0,0,0.9)',\n                          p: 2,\n                          borderRadius: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          sx: {\n                            color: data.phaseColor\n                          },\n                          children: data.phase\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 167,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h6\",\n                          sx: {\n                            color: '#fff'\n                          },\n                          children: [data.year, \": \", data.goals, \" goles\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 53\n                      }, this);\n                    }\n                    return null;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"goals\",\n                  stroke: \"#00bfff\",\n                  strokeWidth: 2,\n                  dot: ({\n                    payload\n                  }) => /*#__PURE__*/_jsxDEV(\"circle\", {\n                    r: 4,\n                    fill: payload.phaseColor,\n                    stroke: \"#fff\",\n                    strokeWidth: selectedYear === payload.year ? 2 : 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 45\n                  }, this),\n                  activeDot: {\n                    r: 8,\n                    fill: \"#fff\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), selectedYear && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              bgcolor: 'rgba(0,0,0,0.6)'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    children: [\"A\\xF1o \", selectedYear]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: [(_yearlyData$find = yearlyData.find(d => d.year === selectedYear)) === null || _yearlyData$find === void 0 ? void 0 : _yearlyData$find.goals, \" goles\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mt: 1,\n                      color: '#666'\n                    },\n                    children: CareerPhases[getPhaseForYear(selectedYear)].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 8,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: [\"Proporci\\xF3n de goles por tipo en \", selectedYear]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 45\n                  }, this), Object.entries(data.tipos_goles).map(([tipo, cantidad]) => {\n                    const porcentaje = cantidad / totalGoals * 100;\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mb: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          mb: 1\n                        },\n                        children: [tipo, \": \", cantidad, \" (\", porcentaje.toFixed(1), \"%)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                        variant: \"determinate\",\n                        value: porcentaje,\n                        sx: {\n                          height: 8,\n                          borderRadius: 4,\n                          bgcolor: 'rgba(255,255,255,0.1)',\n                          '& .MuiLinearProgress-bar': {\n                            bgcolor: CareerPhases[getPhaseForYear(selectedYear)].color\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 57\n                      }, this)]\n                    }, tipo, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(MainViz, \"tQWv7DUefk5BppHzfdQZf0u3O3w=\");\n_c = MainViz;\nexport default MainViz;\nvar _c;\n$RefreshReg$(_c, \"MainViz\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","Box","Typography","IconButton","Card","CardContent","Grid","LinearProgress","Fade","Play","Pause","Volume2","VolumeX","Info","jsxDEV","_jsxDEV","CareerPhases","color","description","getPhaseForYear","year","MainViz","data","_s","_yearlyData$find","selectedYear","setSelectedYear","selectedPhase","setSelectedPhase","isPlaying","setIsPlaying","isMuted","setIsMuted","oscillator","setOscillator","audioContext","setAudioContext","context","window","AudioContext","webkitAudioContext","close","yearlyData","Object","entries","anos","map","goals","phase","parseInt","phaseColor","sort","a","b","totalGoals","values","clubes","reduce","maxGoalsInYear","Math","max","playGoalSound","stop","osc","createOscillator","gainNode","createGain","frequency","type","setValueAtTime","currentTime","gain","linearRampToValueAtTime","connect","destination","start","sx","maxWidth","margin","p","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","bgcolor","mb","md","onClick","cursor","borderRadius","width","height","display","justifyContent","gap","top","right","left","bottom","activePayload","payload","strokeDasharray","stroke","dataKey","tickFormatter","toString","slice","content","active","length","strokeWidth","dot","r","fill","activeDot","in","find","d","mt","tipos_goles","tipo","cantidad","porcentaje","toFixed","value","_c","$RefreshReg$"],"sources":["/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/MainViz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nimport {\n    Box,\n    Typography,\n    IconButton,\n    Card,\n    CardContent,\n    Grid,\n    LinearProgress,\n    Fade\n} from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX, Info } from 'lucide-react';\n\nconst CareerPhases = {\n    'Formación (2002-2006)': { color: '#4CAF50', description: 'Inicio de carrera en Sporting CP y primeros años en Manchester United' },\n    'Ascenso (2007-2009)': { color: '#2196F3', description: 'Consolidación en Manchester United y primer Balón de Oro' },\n    'Dominio (2010-2018)': { color: '#FFC107', description: 'Era dorada en Real Madrid' },\n    'Madurez (2019-2022)': { color: '#9C27B0', description: 'Etapa en Juventus y regreso a Manchester United' },\n    'Etapa Final (2023-)': { color: '#FF5722', description: 'Periodo en Al-Nassr' }\n};\n\nconst getPhaseForYear = (year) => {\n    if (year <= 2006) return 'Formación (2002-2006)';\n    if (year <= 2009) return 'Ascenso (2007-2009)';\n    if (year <= 2018) return 'Dominio (2010-2018)';\n    if (year <= 2022) return 'Madurez (2019-2022)';\n    return 'Etapa Final (2023-)';\n};\n\nconst MainViz = ({ data }) => {\n    const [selectedYear, setSelectedYear] = useState(null);\n    const [selectedPhase, setSelectedPhase] = useState(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    const [oscillator, setOscillator] = useState(null);\n    const [audioContext, setAudioContext] = useState(null);\n\n    useEffect(() => {\n        const context = new (window.AudioContext || window.webkitAudioContext)();\n        setAudioContext(context);\n        return () => context?.close();\n    }, []);\n\n    const yearlyData = Object.entries(data.anos)\n        .map(([year, goals]) => {\n            const phase = getPhaseForYear(parseInt(year));\n            return {\n                year: parseInt(year),\n                goals,\n                phase,\n                phaseColor: CareerPhases[phase].color\n            };\n        })\n        .sort((a, b) => a.year - b.year);\n\n    const totalGoals = Object.values(data.clubes).reduce((a, b) => a + b, 0);\n\n    const maxGoalsInYear = Math.max(...Object.values(data.anos));\n\n    const playGoalSound = (goals) => {\n        if (!isMuted && audioContext) {\n            if (oscillator) oscillator.stop();\n\n            const osc = audioContext.createOscillator();\n            const gainNode = audioContext.createGain();\n\n            const frequency = 220 + (goals / maxGoalsInYear) * 660;\n\n            osc.type = 'sine';\n            osc.frequency.setValueAtTime(frequency, audioContext.currentTime);\n\n            gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n            gainNode.gain.linearRampToValueAtTime(0.3, audioContext.currentTime + 0.01);\n            gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.3);\n\n            osc.connect(gainNode);\n            gainNode.connect(audioContext.destination);\n\n            osc.start();\n            osc.stop(audioContext.currentTime + 0.3);\n\n            setOscillator(osc);\n        }\n    };\n\n    return (\n        <Box sx={{ maxWidth: '1200px', margin: '0 auto', p: 3 }}>\n            <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ color: '#00BFFF' }}>\n                La Carrera Goleadora de Cristiano Ronaldo\n            </Typography>\n\n            <Grid container spacing={3}>\n                {/* Fases de Carrera */}\n                <Grid item xs={12}>\n                    <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)', mb: 3 }}>\n                        <CardContent>\n                            <Grid container spacing={2}>\n                                {Object.entries(CareerPhases).map(([phase, { color, description }]) => (\n                                    <Grid item xs={12} md={2.4} key={phase}>\n                                        <Box\n                                            onClick={() => setSelectedPhase(phase === selectedPhase ? null : phase)}\n                                            sx={{\n                                                cursor: 'pointer',\n                                                p: 1,\n                                                borderRadius: 1,\n                                                bgcolor: selectedPhase === phase ? `${color}22` : 'transparent',\n                                                '&:hover': { bgcolor: `${color}11` }\n                                            }}\n                                        >\n                                            <Box sx={{ width: '100%', height: 4, bgcolor: color, mb: 1 }} />\n                                            <Typography variant=\"body2\" sx={{ color: color }}>\n                                                {phase}\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                {/* Gráfico Principal */}\n                <Grid item xs={12}>\n                    <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)' }}>\n                        <CardContent>\n                            <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mb: 2 }}>\n                                <IconButton\n                                    onClick={() => setIsPlaying(!isPlaying)}\n                                    sx={{ bgcolor: 'primary.main', '&:hover': { bgcolor: 'primary.dark' } }}\n                                >\n                                    {isPlaying ? <Pause /> : <Play />}\n                                </IconButton>\n                                <IconButton\n                                    onClick={() => setIsMuted(!isMuted)}\n                                    sx={{ bgcolor: 'primary.main', '&:hover': { bgcolor: 'primary.dark' } }}\n                                >\n                                    {isMuted ? <VolumeX /> : <Volume2 />}\n                                </IconButton>\n                            </Box>\n\n                            <ResponsiveContainer width=\"100%\" height={400}>\n                                <LineChart\n                                    data={yearlyData}\n                                    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n                                    onClick={(data) => {\n                                        if (data?.activePayload) {\n                                            const payload = data.activePayload[0].payload;\n                                            setSelectedYear(payload.year);\n                                            playGoalSound(payload.goals);\n                                        }\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#444\" />\n                                    <XAxis\n                                        dataKey=\"year\"\n                                        stroke=\"#fff\"\n                                        tickFormatter={(year) => `'${year.toString().slice(2)}`}\n                                    />\n                                    <YAxis stroke=\"#fff\" />\n                                    <Tooltip\n                                        content={({ active, payload }) => {\n                                            if (active && payload?.length) {\n                                                const data = payload[0].payload;\n                                                return (\n                                                    <Box sx={{ bgcolor: 'rgba(0,0,0,0.9)', p: 2, borderRadius: 1 }}>\n                                                        <Typography sx={{ color: data.phaseColor }}>\n                                                            {data.phase}\n                                                        </Typography>\n                                                        <Typography variant=\"h6\" sx={{ color: '#fff' }}>\n                                                            {data.year}: {data.goals} goles\n                                                        </Typography>\n                                                    </Box>\n                                                );\n                                            }\n                                            return null;\n                                        }}\n                                    />\n                                    <Line\n                                        type=\"monotone\"\n                                        dataKey=\"goals\"\n                                        stroke=\"#00bfff\"\n                                        strokeWidth={2}\n                                        dot={({ payload }) => (\n                                            <circle\n                                                r={4}\n                                                fill={payload.phaseColor}\n                                                stroke=\"#fff\"\n                                                strokeWidth={selectedYear === payload.year ? 2 : 0}\n                                            />\n                                        )}\n                                        activeDot={{ r: 8, fill: \"#fff\" }}\n                                    />\n                                </LineChart>\n                            </ResponsiveContainer>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                {/* Detalles */}\n                {selectedYear && (\n                    <Grid item xs={12}>\n                        <Fade in>\n                            <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)' }}>\n                                <CardContent>\n                                    <Grid container spacing={3}>\n                                        <Grid item xs={12} md={4}>\n                                            <Typography variant=\"h6\" gutterBottom>\n                                                Año {selectedYear}\n                                            </Typography>\n                                            <Typography variant=\"body1\">\n                                                {yearlyData.find(d => d.year === selectedYear)?.goals} goles\n                                            </Typography>\n                                            <Typography variant=\"body2\" sx={{ mt: 1, color: '#666' }}>\n                                                {CareerPhases[getPhaseForYear(selectedYear)].description}\n                                            </Typography>\n                                        </Grid>\n\n                                        <Grid item xs={12} md={8}>\n                                            <Typography variant=\"subtitle1\" gutterBottom>\n                                                Proporción de goles por tipo en {selectedYear}\n                                            </Typography>\n                                            {Object.entries(data.tipos_goles).map(([tipo, cantidad]) => {\n                                                const porcentaje = (cantidad / totalGoals) * 100;\n                                                return (\n                                                    <Box key={tipo} sx={{ mb: 2 }}>\n                                                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                                                            {tipo}: {cantidad} ({porcentaje.toFixed(1)}%)\n                                                        </Typography>\n                                                        <LinearProgress\n                                                            variant=\"determinate\"\n                                                            value={porcentaje}\n                                                            sx={{\n                                                                height: 8,\n                                                                borderRadius: 4,\n                                                                bgcolor: 'rgba(255,255,255,0.1)',\n                                                                '& .MuiLinearProgress-bar': {\n                                                                    bgcolor: CareerPhases[getPhaseForYear(selectedYear)].color\n                                                                }\n                                                            }}\n                                                        />\n                                                    </Box>\n                                                );\n                                            })}\n                                        </Grid>\n                                    </Grid>\n                                </CardContent>\n                            </Card>\n                        </Fade>\n                    </Grid>\n                )}\n            </Grid>\n        </Box>\n    );\n};\n\nexport default MainViz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,mBAAmB,EAAEC,aAAa,QAAQ,UAAU;AACrG,SACIC,GAAG,EACHC,UAAU,EACVC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,IAAI,EACJC,cAAc,EACdC,IAAI,QACD,eAAe;AACtB,SAASC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAEC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,GAAG;EACjB,uBAAuB,EAAE;IAAEC,KAAK,EAAE,SAAS;IAAEC,WAAW,EAAE;EAAwE,CAAC;EACnI,qBAAqB,EAAE;IAAED,KAAK,EAAE,SAAS;IAAEC,WAAW,EAAE;EAA2D,CAAC;EACpH,qBAAqB,EAAE;IAAED,KAAK,EAAE,SAAS;IAAEC,WAAW,EAAE;EAA4B,CAAC;EACrF,qBAAqB,EAAE;IAAED,KAAK,EAAE,SAAS;IAAEC,WAAW,EAAE;EAAkD,CAAC;EAC3G,qBAAqB,EAAE;IAAED,KAAK,EAAE,SAAS;IAAEC,WAAW,EAAE;EAAsB;AAClF,CAAC;AAED,MAAMC,eAAe,GAAIC,IAAI,IAAK;EAC9B,IAAIA,IAAI,IAAI,IAAI,EAAE,OAAO,uBAAuB;EAChD,IAAIA,IAAI,IAAI,IAAI,EAAE,OAAO,qBAAqB;EAC9C,IAAIA,IAAI,IAAI,IAAI,EAAE,OAAO,qBAAqB;EAC9C,IAAIA,IAAI,IAAI,IAAI,EAAE,OAAO,qBAAqB;EAC9C,OAAO,qBAAqB;AAChC,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,MAAM4C,OAAO,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC;IACxEJ,eAAe,CAACC,OAAO,CAAC;IACxB,OAAO,MAAMA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,KAAK,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGC,MAAM,CAACC,OAAO,CAACtB,IAAI,CAACuB,IAAI,CAAC,CACvCC,GAAG,CAAC,CAAC,CAAC1B,IAAI,EAAE2B,KAAK,CAAC,KAAK;IACpB,MAAMC,KAAK,GAAG7B,eAAe,CAAC8B,QAAQ,CAAC7B,IAAI,CAAC,CAAC;IAC7C,OAAO;MACHA,IAAI,EAAE6B,QAAQ,CAAC7B,IAAI,CAAC;MACpB2B,KAAK;MACLC,KAAK;MACLE,UAAU,EAAElC,YAAY,CAACgC,KAAK,CAAC,CAAC/B;IACpC,CAAC;EACL,CAAC,CAAC,CACDkC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAChC,IAAI,GAAGiC,CAAC,CAACjC,IAAI,CAAC;EAEpC,MAAMkC,UAAU,GAAGX,MAAM,CAACY,MAAM,CAACjC,IAAI,CAACkC,MAAM,CAAC,CAACC,MAAM,CAAC,CAACL,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;EAExE,MAAMK,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGjB,MAAM,CAACY,MAAM,CAACjC,IAAI,CAACuB,IAAI,CAAC,CAAC;EAE5D,MAAMgB,aAAa,GAAId,KAAK,IAAK;IAC7B,IAAI,CAAChB,OAAO,IAAII,YAAY,EAAE;MAC1B,IAAIF,UAAU,EAAEA,UAAU,CAAC6B,IAAI,CAAC,CAAC;MAEjC,MAAMC,GAAG,GAAG5B,YAAY,CAAC6B,gBAAgB,CAAC,CAAC;MAC3C,MAAMC,QAAQ,GAAG9B,YAAY,CAAC+B,UAAU,CAAC,CAAC;MAE1C,MAAMC,SAAS,GAAG,GAAG,GAAIpB,KAAK,GAAGW,cAAc,GAAI,GAAG;MAEtDK,GAAG,CAACK,IAAI,GAAG,MAAM;MACjBL,GAAG,CAACI,SAAS,CAACE,cAAc,CAACF,SAAS,EAAEhC,YAAY,CAACmC,WAAW,CAAC;MAEjEL,QAAQ,CAACM,IAAI,CAACF,cAAc,CAAC,CAAC,EAAElC,YAAY,CAACmC,WAAW,CAAC;MACzDL,QAAQ,CAACM,IAAI,CAACC,uBAAuB,CAAC,GAAG,EAAErC,YAAY,CAACmC,WAAW,GAAG,IAAI,CAAC;MAC3EL,QAAQ,CAACM,IAAI,CAACC,uBAAuB,CAAC,CAAC,EAAErC,YAAY,CAACmC,WAAW,GAAG,GAAG,CAAC;MAExEP,GAAG,CAACU,OAAO,CAACR,QAAQ,CAAC;MACrBA,QAAQ,CAACQ,OAAO,CAACtC,YAAY,CAACuC,WAAW,CAAC;MAE1CX,GAAG,CAACY,KAAK,CAAC,CAAC;MACXZ,GAAG,CAACD,IAAI,CAAC3B,YAAY,CAACmC,WAAW,GAAG,GAAG,CAAC;MAExCpC,aAAa,CAAC6B,GAAG,CAAC;IACtB;EACJ,CAAC;EAED,oBACIhD,OAAA,CAACd,GAAG;IAAC2E,EAAE,EAAE;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,MAAM,EAAE,QAAQ;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACpDjE,OAAA,CAACb,UAAU;MAAC+E,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,QAAQ;MAACC,YAAY;MAACP,EAAE,EAAE;QAAE3D,KAAK,EAAE;MAAU,CAAE;MAAA+D,QAAA,EAAC;IAE/E;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbxE,OAAA,CAACT,IAAI;MAACkF,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAT,QAAA,gBAEvBjE,OAAA,CAACT,IAAI;QAACoF,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAX,QAAA,eACdjE,OAAA,CAACX,IAAI;UAACwE,EAAE,EAAE;YAAEgB,OAAO,EAAE,iBAAiB;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAb,QAAA,eAC5CjE,OAAA,CAACV,WAAW;YAAA2E,QAAA,eACRjE,OAAA,CAACT,IAAI;cAACkF,SAAS;cAACC,OAAO,EAAE,CAAE;cAAAT,QAAA,EACtBrC,MAAM,CAACC,OAAO,CAAC5B,YAAY,CAAC,CAAC8B,GAAG,CAAC,CAAC,CAACE,KAAK,EAAE;gBAAE/B,KAAK;gBAAEC;cAAY,CAAC,CAAC,kBAC9DH,OAAA,CAACT,IAAI;gBAACoF,IAAI;gBAACC,EAAE,EAAE,EAAG;gBAACG,EAAE,EAAE,GAAI;gBAAAd,QAAA,eACvBjE,OAAA,CAACd,GAAG;kBACA8F,OAAO,EAAEA,CAAA,KAAMnE,gBAAgB,CAACoB,KAAK,KAAKrB,aAAa,GAAG,IAAI,GAAGqB,KAAK,CAAE;kBACxE4B,EAAE,EAAE;oBACAoB,MAAM,EAAE,SAAS;oBACjBjB,CAAC,EAAE,CAAC;oBACJkB,YAAY,EAAE,CAAC;oBACfL,OAAO,EAAEjE,aAAa,KAAKqB,KAAK,GAAG,GAAG/B,KAAK,IAAI,GAAG,aAAa;oBAC/D,SAAS,EAAE;sBAAE2E,OAAO,EAAE,GAAG3E,KAAK;oBAAK;kBACvC,CAAE;kBAAA+D,QAAA,gBAEFjE,OAAA,CAACd,GAAG;oBAAC2E,EAAE,EAAE;sBAAEsB,KAAK,EAAE,MAAM;sBAAEC,MAAM,EAAE,CAAC;sBAAEP,OAAO,EAAE3E,KAAK;sBAAE4E,EAAE,EAAE;oBAAE;kBAAE;oBAAAT,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAChExE,OAAA,CAACb,UAAU;oBAAC+E,OAAO,EAAC,OAAO;oBAACL,EAAE,EAAE;sBAAE3D,KAAK,EAAEA;oBAAM,CAAE;oBAAA+D,QAAA,EAC5ChC;kBAAK;oBAAAoC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACZ;cAAC,GAfuBvC,KAAK;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAgBhC,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGPxE,OAAA,CAACT,IAAI;QAACoF,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAX,QAAA,eACdjE,OAAA,CAACX,IAAI;UAACwE,EAAE,EAAE;YAAEgB,OAAO,EAAE;UAAkB,CAAE;UAAAZ,QAAA,eACrCjE,OAAA,CAACV,WAAW;YAAA2E,QAAA,gBACRjE,OAAA,CAACd,GAAG;cAAC2E,EAAE,EAAE;gBAAEwB,OAAO,EAAE,MAAM;gBAAEC,cAAc,EAAE,QAAQ;gBAAEC,GAAG,EAAE,CAAC;gBAAET,EAAE,EAAE;cAAE,CAAE;cAAAb,QAAA,gBAClEjE,OAAA,CAACZ,UAAU;gBACP4F,OAAO,EAAEA,CAAA,KAAMjE,YAAY,CAAC,CAACD,SAAS,CAAE;gBACxC+C,EAAE,EAAE;kBAAEgB,OAAO,EAAE,cAAc;kBAAE,SAAS,EAAE;oBAAEA,OAAO,EAAE;kBAAe;gBAAE,CAAE;gBAAAZ,QAAA,EAEvEnD,SAAS,gBAAGd,OAAA,CAACL,KAAK;kBAAA0E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAAGxE,OAAA,CAACN,IAAI;kBAAA2E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACbxE,OAAA,CAACZ,UAAU;gBACP4F,OAAO,EAAEA,CAAA,KAAM/D,UAAU,CAAC,CAACD,OAAO,CAAE;gBACpC6C,EAAE,EAAE;kBAAEgB,OAAO,EAAE,cAAc;kBAAE,SAAS,EAAE;oBAAEA,OAAO,EAAE;kBAAe;gBAAE,CAAE;gBAAAZ,QAAA,EAEvEjD,OAAO,gBAAGhB,OAAA,CAACH,OAAO;kBAAAwE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAAGxE,OAAA,CAACJ,OAAO;kBAAAyE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,eAENxE,OAAA,CAAChB,mBAAmB;cAACmG,KAAK,EAAC,MAAM;cAACC,MAAM,EAAE,GAAI;cAAAnB,QAAA,eAC1CjE,OAAA,CAACrB,SAAS;gBACN4B,IAAI,EAAEoB,UAAW;gBACjBoC,MAAM,EAAE;kBAAEyB,GAAG,EAAE,EAAE;kBAAEC,KAAK,EAAE,EAAE;kBAAEC,IAAI,EAAE,EAAE;kBAAEC,MAAM,EAAE;gBAAG,CAAE;gBACrDX,OAAO,EAAGzE,IAAI,IAAK;kBACf,IAAIA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEqF,aAAa,EAAE;oBACrB,MAAMC,OAAO,GAAGtF,IAAI,CAACqF,aAAa,CAAC,CAAC,CAAC,CAACC,OAAO;oBAC7ClF,eAAe,CAACkF,OAAO,CAACxF,IAAI,CAAC;oBAC7ByC,aAAa,CAAC+C,OAAO,CAAC7D,KAAK,CAAC;kBAChC;gBACJ,CAAE;gBAAAiC,QAAA,gBAEFjE,OAAA,CAACf,aAAa;kBAAC6G,eAAe,EAAC,KAAK;kBAACC,MAAM,EAAC;gBAAM;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACrDxE,OAAA,CAACnB,KAAK;kBACFmH,OAAO,EAAC,MAAM;kBACdD,MAAM,EAAC,MAAM;kBACbE,aAAa,EAAG5F,IAAI,IAAK,IAAIA,IAAI,CAAC6F,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;gBAAG;kBAAA9B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3D,CAAC,eACFxE,OAAA,CAAClB,KAAK;kBAACiH,MAAM,EAAC;gBAAM;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACvBxE,OAAA,CAACjB,OAAO;kBACJqH,OAAO,EAAEA,CAAC;oBAAEC,MAAM;oBAAER;kBAAQ,CAAC,KAAK;oBAC9B,IAAIQ,MAAM,IAAIR,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAES,MAAM,EAAE;sBAC3B,MAAM/F,IAAI,GAAGsF,OAAO,CAAC,CAAC,CAAC,CAACA,OAAO;sBAC/B,oBACI7F,OAAA,CAACd,GAAG;wBAAC2E,EAAE,EAAE;0BAAEgB,OAAO,EAAE,iBAAiB;0BAAEb,CAAC,EAAE,CAAC;0BAAEkB,YAAY,EAAE;wBAAE,CAAE;wBAAAjB,QAAA,gBAC3DjE,OAAA,CAACb,UAAU;0BAAC0E,EAAE,EAAE;4BAAE3D,KAAK,EAAEK,IAAI,CAAC4B;0BAAW,CAAE;0BAAA8B,QAAA,EACtC1D,IAAI,CAAC0B;wBAAK;0BAAAoC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACH,CAAC,eACbxE,OAAA,CAACb,UAAU;0BAAC+E,OAAO,EAAC,IAAI;0BAACL,EAAE,EAAE;4BAAE3D,KAAK,EAAE;0BAAO,CAAE;0BAAA+D,QAAA,GAC1C1D,IAAI,CAACF,IAAI,EAAC,IAAE,EAACE,IAAI,CAACyB,KAAK,EAAC,QAC7B;wBAAA;0BAAAqC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAY,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACZ,CAAC;oBAEd;oBACA,OAAO,IAAI;kBACf;gBAAE;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,eACFxE,OAAA,CAACpB,IAAI;kBACDyE,IAAI,EAAC,UAAU;kBACf2C,OAAO,EAAC,OAAO;kBACfD,MAAM,EAAC,SAAS;kBAChBQ,WAAW,EAAE,CAAE;kBACfC,GAAG,EAAEA,CAAC;oBAAEX;kBAAQ,CAAC,kBACb7F,OAAA;oBACIyG,CAAC,EAAE,CAAE;oBACLC,IAAI,EAAEb,OAAO,CAAC1D,UAAW;oBACzB4D,MAAM,EAAC,MAAM;oBACbQ,WAAW,EAAE7F,YAAY,KAAKmF,OAAO,CAACxF,IAAI,GAAG,CAAC,GAAG;kBAAE;oBAAAgE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtD,CACH;kBACFmC,SAAS,EAAE;oBAAEF,CAAC,EAAE,CAAC;oBAAEC,IAAI,EAAE;kBAAO;gBAAE;kBAAArC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAGN9D,YAAY,iBACTV,OAAA,CAACT,IAAI;QAACoF,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAX,QAAA,eACdjE,OAAA,CAACP,IAAI;UAACmH,EAAE;UAAA3C,QAAA,eACJjE,OAAA,CAACX,IAAI;YAACwE,EAAE,EAAE;cAAEgB,OAAO,EAAE;YAAkB,CAAE;YAAAZ,QAAA,eACrCjE,OAAA,CAACV,WAAW;cAAA2E,QAAA,eACRjE,OAAA,CAACT,IAAI;gBAACkF,SAAS;gBAACC,OAAO,EAAE,CAAE;gBAAAT,QAAA,gBACvBjE,OAAA,CAACT,IAAI;kBAACoF,IAAI;kBAACC,EAAE,EAAE,EAAG;kBAACG,EAAE,EAAE,CAAE;kBAAAd,QAAA,gBACrBjE,OAAA,CAACb,UAAU;oBAAC+E,OAAO,EAAC,IAAI;oBAACE,YAAY;oBAAAH,QAAA,GAAC,SAC9B,EAACvD,YAAY;kBAAA;oBAAA2D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC,eACbxE,OAAA,CAACb,UAAU;oBAAC+E,OAAO,EAAC,OAAO;oBAAAD,QAAA,IAAAxD,gBAAA,GACtBkB,UAAU,CAACkF,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACzG,IAAI,KAAKK,YAAY,CAAC,cAAAD,gBAAA,uBAA7CA,gBAAA,CAA+CuB,KAAK,EAAC,QAC1D;kBAAA;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACbxE,OAAA,CAACb,UAAU;oBAAC+E,OAAO,EAAC,OAAO;oBAACL,EAAE,EAAE;sBAAEkD,EAAE,EAAE,CAAC;sBAAE7G,KAAK,EAAE;oBAAO,CAAE;oBAAA+D,QAAA,EACpDhE,YAAY,CAACG,eAAe,CAACM,YAAY,CAAC,CAAC,CAACP;kBAAW;oBAAAkE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChD,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX,CAAC,eAEPxE,OAAA,CAACT,IAAI;kBAACoF,IAAI;kBAACC,EAAE,EAAE,EAAG;kBAACG,EAAE,EAAE,CAAE;kBAAAd,QAAA,gBACrBjE,OAAA,CAACb,UAAU;oBAAC+E,OAAO,EAAC,WAAW;oBAACE,YAAY;oBAAAH,QAAA,GAAC,qCACT,EAACvD,YAAY;kBAAA;oBAAA2D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrC,CAAC,EACZ5C,MAAM,CAACC,OAAO,CAACtB,IAAI,CAACyG,WAAW,CAAC,CAACjF,GAAG,CAAC,CAAC,CAACkF,IAAI,EAAEC,QAAQ,CAAC,KAAK;oBACxD,MAAMC,UAAU,GAAID,QAAQ,GAAG3E,UAAU,GAAI,GAAG;oBAChD,oBACIvC,OAAA,CAACd,GAAG;sBAAY2E,EAAE,EAAE;wBAAEiB,EAAE,EAAE;sBAAE,CAAE;sBAAAb,QAAA,gBAC1BjE,OAAA,CAACb,UAAU;wBAAC+E,OAAO,EAAC,OAAO;wBAACL,EAAE,EAAE;0BAAEiB,EAAE,EAAE;wBAAE,CAAE;wBAAAb,QAAA,GACrCgD,IAAI,EAAC,IAAE,EAACC,QAAQ,EAAC,IAAE,EAACC,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,IAC/C;sBAAA;wBAAA/C,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAY,CAAC,eACbxE,OAAA,CAACR,cAAc;wBACX0E,OAAO,EAAC,aAAa;wBACrBmD,KAAK,EAAEF,UAAW;wBAClBtD,EAAE,EAAE;0BACAuB,MAAM,EAAE,CAAC;0BACTF,YAAY,EAAE,CAAC;0BACfL,OAAO,EAAE,uBAAuB;0BAChC,0BAA0B,EAAE;4BACxBA,OAAO,EAAE5E,YAAY,CAACG,eAAe,CAACM,YAAY,CAAC,CAAC,CAACR;0BACzD;wBACJ;sBAAE;wBAAAmE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACL,CAAC;oBAAA,GAfIyC,IAAI;sBAAA5C,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAgBT,CAAC;kBAEd,CAAC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAChE,EAAA,CAhOIF,OAAO;AAAAgH,EAAA,GAAPhH,OAAO;AAkOb,eAAeA,OAAO;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}