{"ast":null,"code":"var _jsxFileName = \"/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/InteractiveGoalsViz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nimport { Box, Typography, IconButton } from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX } from 'lucide-react';\nimport * as Tone from 'tone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveGoalsViz = ({\n  data\n}) => {\n  _s();\n  var _yearlyData$find;\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  // Creamos el sintetizador\n  const [synth] = useState(() => new Tone.PolySynth().toDestination());\n\n  // Procesar datos para el gráfico de línea\n  const yearlyData = Object.entries(data.anos).map(([year, goals]) => ({\n    year: parseInt(year),\n    goals\n  })).sort((a, b) => a.year - b.year);\n\n  // Función para reproducir sonido\n  const playGoalSound = async goals => {\n    if (!isMuted) {\n      try {\n        // Asegurarse de que el contexto de audio está iniciado\n        await Tone.start();\n        // Mapear los goles a notas musicales (C4 a C5)\n        const note = goals < 30 ? \"C4\" : goals < 40 ? \"D4\" : goals < 50 ? \"E4\" : goals < 60 ? \"G4\" : \"C5\";\n        synth.triggerAttackRelease(note, \"8n\");\n      } catch (error) {\n        console.error(\"Error reproduciendo sonido:\", error);\n      }\n    }\n  };\n\n  // Reproducción automática\n  useEffect(() => {\n    let interval;\n    if (isPlaying) {\n      let index = 0;\n      interval = setInterval(async () => {\n        if (index < yearlyData.length) {\n          setSelectedYear(yearlyData[index].year);\n          await playGoalSound(yearlyData[index].goals);\n          index++;\n        } else {\n          setIsPlaying(false);\n        }\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isPlaying]);\n\n  // Función para manejar el clic en un punto del gráfico\n  const handleClick = async data => {\n    if (data && data.activePayload) {\n      const year = data.activePayload[0].payload.year;\n      setSelectedYear(year);\n      await playGoalSound(data.activePayload[0].payload.goals);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: \"Evoluci\\xF3n de Goles por A\\xF1o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => setIsPlaying(!isPlaying),\n        sx: {\n          bgcolor: 'primary.main',\n          '&:hover': {\n            bgcolor: 'primary.dark'\n          },\n          color: 'white'\n        },\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => setIsMuted(!isMuted),\n        sx: {\n          bgcolor: 'primary.main',\n          '&:hover': {\n            bgcolor: 'primary.dark'\n          },\n          color: 'white'\n        },\n        children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeX, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(Volume2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: yearlyData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 20\n        },\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#444\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"year\",\n          stroke: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n            border: '1px solid #666',\n            color: 'white'\n          },\n          formatter: value => [`${value} goles`]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"goals\",\n          stroke: \"#00bfff\",\n          strokeWidth: 2,\n          dot: {\n            r: 4,\n            fill: \"#00bfff\"\n          },\n          activeDot: {\n            r: 8,\n            fill: \"#fff\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), selectedYear && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        p: 2,\n        bgcolor: 'rgba(0,0,0,0.5)',\n        borderRadius: 2,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"A\\xF1o \", selectedYear, \": \", (_yearlyData$find = yearlyData.find(d => d.year === selectedYear)) === null || _yearlyData$find === void 0 ? void 0 : _yearlyData$find.goals, \" goles\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 1\n        },\n        children: \"Haz clic en los puntos del gr\\xE1fico para escuchar el sonido correspondiente a cada a\\xF1o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(InteractiveGoalsViz, \"bdDExbhhx7MlYYmOX3cUcOdx4+w=\");\n_c = InteractiveGoalsViz;\nexport default InteractiveGoalsViz;\nvar _c;\n$RefreshReg$(_c, \"InteractiveGoalsViz\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","Box","Typography","IconButton","Play","Pause","Volume2","VolumeX","Tone","jsxDEV","_jsxDEV","InteractiveGoalsViz","data","_s","_yearlyData$find","selectedYear","setSelectedYear","isPlaying","setIsPlaying","isMuted","setIsMuted","synth","PolySynth","toDestination","yearlyData","Object","entries","anos","map","year","goals","parseInt","sort","a","b","playGoalSound","start","note","triggerAttackRelease","error","console","interval","index","setInterval","length","clearInterval","handleClick","activePayload","payload","sx","width","p","children","variant","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","onClick","bgcolor","color","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","contentStyle","backgroundColor","border","formatter","value","type","strokeWidth","dot","r","fill","activeDot","mt","borderRadius","find","d","_c","$RefreshReg$"],"sources":["/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/InteractiveGoalsViz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nimport { Box, Typography, IconButton } from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX } from 'lucide-react';\nimport * as Tone from 'tone';\n\nconst InteractiveGoalsViz = ({ data }) => {\n    const [selectedYear, setSelectedYear] = useState(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    // Creamos el sintetizador\n    const [synth] = useState(() => new Tone.PolySynth().toDestination());\n\n    // Procesar datos para el gráfico de línea\n    const yearlyData = Object.entries(data.anos)\n        .map(([year, goals]) => ({\n            year: parseInt(year),\n            goals,\n        }))\n        .sort((a, b) => a.year - b.year);\n\n    // Función para reproducir sonido\n    const playGoalSound = async (goals) => {\n        if (!isMuted) {\n            try {\n                // Asegurarse de que el contexto de audio está iniciado\n                await Tone.start();\n                // Mapear los goles a notas musicales (C4 a C5)\n                const note = goals < 30 ? \"C4\" :\n                    goals < 40 ? \"D4\" :\n                        goals < 50 ? \"E4\" :\n                            goals < 60 ? \"G4\" : \"C5\";\n                synth.triggerAttackRelease(note, \"8n\");\n            } catch (error) {\n                console.error(\"Error reproduciendo sonido:\", error);\n            }\n        }\n    };\n\n    // Reproducción automática\n    useEffect(() => {\n        let interval;\n        if (isPlaying) {\n            let index = 0;\n            interval = setInterval(async () => {\n                if (index < yearlyData.length) {\n                    setSelectedYear(yearlyData[index].year);\n                    await playGoalSound(yearlyData[index].goals);\n                    index++;\n                } else {\n                    setIsPlaying(false);\n                }\n            }, 1000);\n        }\n        return () => clearInterval(interval);\n    }, [isPlaying]);\n\n    // Función para manejar el clic en un punto del gráfico\n    const handleClick = async (data) => {\n        if (data && data.activePayload) {\n            const year = data.activePayload[0].payload.year;\n            setSelectedYear(year);\n            await playGoalSound(data.activePayload[0].payload.goals);\n        }\n    };\n\n    return (\n        <Box sx={{ width: '100%', p: 4 }}>\n            <Typography variant=\"h4\" sx={{ mb: 4, textAlign: 'center' }}>\n                Evolución de Goles por Año\n            </Typography>\n\n            <Box sx={{ mb: 2, display: 'flex', justifyContent: 'center', gap: 2 }}>\n                <IconButton\n                    onClick={() => setIsPlaying(!isPlaying)}\n                    sx={{\n                        bgcolor: 'primary.main',\n                        '&:hover': { bgcolor: 'primary.dark' },\n                        color: 'white'\n                    }}\n                >\n                    {isPlaying ? <Pause /> : <Play />}\n                </IconButton>\n                <IconButton\n                    onClick={() => setIsMuted(!isMuted)}\n                    sx={{\n                        bgcolor: 'primary.main',\n                        '&:hover': { bgcolor: 'primary.dark' },\n                        color: 'white'\n                    }}\n                >\n                    {isMuted ? <VolumeX /> : <Volume2 />}\n                </IconButton>\n            </Box>\n\n            <ResponsiveContainer width=\"100%\" height={400}>\n                <LineChart\n                    data={yearlyData}\n                    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n                    onClick={handleClick}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#444\" />\n                    <XAxis\n                        dataKey=\"year\"\n                        stroke=\"#fff\"\n                    />\n                    <YAxis stroke=\"#fff\" />\n                    <Tooltip\n                        contentStyle={{\n                            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                            border: '1px solid #666',\n                            color: 'white'\n                        }}\n                        formatter={(value) => [`${value} goles`]}\n                    />\n                    <Line\n                        type=\"monotone\"\n                        dataKey=\"goals\"\n                        stroke=\"#00bfff\"\n                        strokeWidth={2}\n                        dot={{ r: 4, fill: \"#00bfff\" }}\n                        activeDot={{ r: 8, fill: \"#fff\" }}\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n\n            {selectedYear && (\n                <Box sx={{\n                    mt: 4,\n                    p: 2,\n                    bgcolor: 'rgba(0,0,0,0.5)',\n                    borderRadius: 2,\n                    textAlign: 'center'\n                }}>\n                    <Typography variant=\"h6\">\n                        Año {selectedYear}: {yearlyData.find(d => d.year === selectedYear)?.goals} goles\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ mt: 1 }}>\n                        Haz clic en los puntos del gráfico para escuchar el sonido correspondiente a cada año\n                    </Typography>\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default InteractiveGoalsViz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}