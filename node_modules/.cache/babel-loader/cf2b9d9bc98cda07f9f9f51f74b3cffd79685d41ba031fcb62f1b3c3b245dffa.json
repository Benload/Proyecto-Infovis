{"ast":null,"code":"var _jsxFileName = \"/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/MainViz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nimport { Box, Typography, IconButton, Card, CardContent, Grid, LinearProgress, Fade } from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX } from 'lucide-react';\n\n// Sonidos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst goalSounds = {\n  regular: new Audio('/sounds/regular-goal.mp3'),\n  penalty: new Audio('/sounds/penalty.mp3'),\n  freekick: new Audio('/sounds/freekick.mp3'),\n  header: new Audio('/sounds/header.mp3')\n};\nObject.values(goalSounds).forEach(sound => {\n  sound.volume = 0.5; // Ajustar volumen al 50%\n});\nconst CareerPhases = {\n  'Formación (2002-2006)': {\n    color: '#4CAF50',\n    description: 'Inicio de carrera en Sporting CP y primeros años en Manchester United',\n    sound: 'regular'\n  },\n  'Ascenso (2007-2009)': {\n    color: '#2196F3',\n    description: 'Consolidación en Manchester United y primer Balón de Oro',\n    sound: 'header'\n  },\n  'Dominio (2010-2018)': {\n    color: '#FFC107',\n    description: 'Era dorada en Real Madrid',\n    sound: 'freekick'\n  },\n  'Madurez (2019-2022)': {\n    color: '#9C27B0',\n    description: 'Etapa en Juventus y regreso a Manchester United',\n    sound: 'penalty'\n  },\n  'Etapa Final (2023-)': {\n    color: '#FF5722',\n    description: 'Periodo en Al-Nassr',\n    sound: 'regular'\n  }\n};\nconst getPhaseForYear = year => {\n  if (year <= 2006) return 'Formación (2002-2006)';\n  if (year <= 2009) return 'Ascenso (2007-2009)';\n  if (year <= 2018) return 'Dominio (2010-2018)';\n  if (year <= 2022) return 'Madurez (2019-2022)';\n  return 'Etapa Final (2023-)';\n};\nconst MainViz = ({\n  data\n}) => {\n  _s();\n  var _yearlyData$find;\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [selectedPhase, setSelectedPhase] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [playbackIndex, setPlaybackIndex] = useState(0);\n  const playbackRef = useRef(null);\n  const yearlyData = Object.entries(data.anos).map(([year, goals]) => {\n    const phase = getPhaseForYear(parseInt(year));\n    return {\n      year: parseInt(year),\n      goals,\n      phase,\n      phaseColor: CareerPhases[phase].color\n    };\n  }).sort((a, b) => a.year - b.year);\n  const totalGoals = Object.values(data.clubes).reduce((a, b) => a + b, 0);\n  const playGoalSound = (goals, phase) => {\n    if (!isMuted) {\n      const sound = goalSounds[CareerPhases[phase].sound];\n      sound.currentTime = 0;\n      sound.play().catch(error => console.log('Error playing sound:', error));\n    }\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      const playStep = () => {\n        if (playbackIndex < yearlyData.length) {\n          const currentData = yearlyData[playbackIndex];\n          setSelectedYear(currentData.year);\n          playGoalSound(currentData.goals, currentData.phase);\n          setPlaybackIndex(prev => prev + 1);\n          playbackRef.current = setTimeout(playStep, 1000);\n        } else {\n          setIsPlaying(false);\n          setPlaybackIndex(0);\n        }\n      };\n      playbackRef.current = setTimeout(playStep, 1000);\n    }\n    return () => {\n      if (playbackRef.current) {\n        clearTimeout(playbackRef.current);\n      }\n    };\n  }, [isPlaying, playbackIndex]);\n  const handlePlayPause = () => {\n    if (!isPlaying && playbackIndex >= yearlyData.length) {\n      setPlaybackIndex(0);\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handlePhaseClick = phase => {\n    setSelectedPhase(phase === selectedPhase ? null : phase);\n  };\n  const handleDataClick = data => {\n    if (data && data.activePayload) {\n      const payload = data.activePayload[0].payload;\n      setSelectedYear(payload.year);\n      playGoalSound(payload.goals, payload.phase);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      gutterBottom: true,\n      sx: {\n        color: '#00BFFF'\n      },\n      children: \"La Carrera Goleadora de Cristiano Ronaldo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0,0,0,0.6)',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: Object.entries(CareerPhases).map(([phase, {\n                color,\n                description\n              }]) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 2.4,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  onClick: () => handlePhaseClick(phase),\n                  sx: {\n                    cursor: 'pointer',\n                    p: 1,\n                    borderRadius: 1,\n                    bgcolor: selectedPhase === phase ? `${color}22` : 'transparent',\n                    '&:hover': {\n                      bgcolor: `${color}11`\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      width: '100%',\n                      height: 4,\n                      bgcolor: color,\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      color: color\n                    },\n                    children: phase\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this)\n              }, phase, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            bgcolor: 'rgba(0,0,0,0.6)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'center',\n                gap: 2,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handlePlayPause,\n                sx: {\n                  bgcolor: 'primary.main',\n                  '&:hover': {\n                    bgcolor: 'primary.dark'\n                  },\n                  color: 'white'\n                },\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 50\n                }, this) : /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setIsMuted(!isMuted),\n                sx: {\n                  bgcolor: 'primary.main',\n                  '&:hover': {\n                    bgcolor: 'primary.dark'\n                  },\n                  color: 'white'\n                },\n                children: isMuted ? /*#__PURE__*/_jsxDEV(VolumeX, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 48\n                }, this) : /*#__PURE__*/_jsxDEV(Volume2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 400,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: yearlyData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 20\n                },\n                onClick: handleDataClick,\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\",\n                  stroke: \"#444\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"year\",\n                  stroke: \"#fff\",\n                  tickFormatter: year => `'${year.toString().slice(2)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  stroke: \"#fff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  content: ({\n                    active,\n                    payload\n                  }) => {\n                    if (active && payload !== null && payload !== void 0 && payload.length) {\n                      const data = payload[0].payload;\n                      return /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          bgcolor: 'rgba(0,0,0,0.9)',\n                          p: 2,\n                          borderRadius: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          sx: {\n                            color: data.phaseColor\n                          },\n                          children: data.phase\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h6\",\n                          sx: {\n                            color: '#fff'\n                          },\n                          children: [data.year, \": \", data.goals, \" goles\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 53\n                      }, this);\n                    }\n                    return null;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"goals\",\n                  stroke: \"#00bfff\",\n                  strokeWidth: 2,\n                  dot: ({\n                    payload\n                  }) => /*#__PURE__*/_jsxDEV(\"circle\", {\n                    r: payload.year === selectedYear ? 6 : 4,\n                    fill: payload.phaseColor,\n                    stroke: \"#fff\",\n                    strokeWidth: payload.year === selectedYear ? 2 : 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 45\n                  }, this),\n                  activeDot: {\n                    r: 8,\n                    fill: \"#fff\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), selectedYear && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              bgcolor: 'rgba(0,0,0,0.6)'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    children: [\"A\\xF1o \", selectedYear]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: [(_yearlyData$find = yearlyData.find(d => d.year === selectedYear)) === null || _yearlyData$find === void 0 ? void 0 : _yearlyData$find.goals, \" goles\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mt: 1,\n                      color: '#666'\n                    },\n                    children: CareerPhases[getPhaseForYear(selectedYear)].description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 8,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"Proporci\\xF3n de goles por tipo en carrera completa\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 45\n                  }, this), Object.entries(data.tipos_goles).map(([tipo, cantidad]) => {\n                    const porcentaje = cantidad / totalGoals * 100;\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mb: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          mb: 1\n                        },\n                        children: [tipo, \": \", cantidad, \" (\", porcentaje.toFixed(1), \"%)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                        variant: \"determinate\",\n                        value: porcentaje,\n                        sx: {\n                          height: 8,\n                          borderRadius: 4,\n                          bgcolor: 'rgba(255,255,255,0.1)',\n                          '& .MuiLinearProgress-bar': {\n                            bgcolor: CareerPhases[getPhaseForYear(selectedYear)].color\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 57\n                      }, this)]\n                    }, tipo, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n_s(MainViz, \"lcjl+4LDkSZt8Xn24Oe7kzwBbps=\");\n_c = MainViz;\nexport default MainViz;\nvar _c;\n$RefreshReg$(_c, \"MainViz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","Box","Typography","IconButton","Card","CardContent","Grid","LinearProgress","Fade","Play","Pause","Volume2","VolumeX","jsxDEV","_jsxDEV","goalSounds","regular","Audio","penalty","freekick","header","Object","values","forEach","sound","volume","CareerPhases","color","description","getPhaseForYear","year","MainViz","data","_s","_yearlyData$find","selectedYear","setSelectedYear","selectedPhase","setSelectedPhase","isPlaying","setIsPlaying","isMuted","setIsMuted","playbackIndex","setPlaybackIndex","playbackRef","yearlyData","entries","anos","map","goals","phase","parseInt","phaseColor","sort","a","b","totalGoals","clubes","reduce","playGoalSound","currentTime","play","catch","error","console","log","playStep","length","currentData","prev","current","setTimeout","clearTimeout","handlePlayPause","handlePhaseClick","handleDataClick","activePayload","payload","sx","maxWidth","margin","p","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","bgcolor","mb","md","onClick","cursor","borderRadius","width","height","display","justifyContent","gap","top","right","left","bottom","strokeDasharray","stroke","dataKey","tickFormatter","toString","slice","content","active","type","strokeWidth","dot","r","fill","activeDot","in","find","d","mt","tipos_goles","tipo","cantidad","porcentaje","toFixed","value","_c","$RefreshReg$"],"sources":["/Users/benjamindomenechavila/ramos/infovis/proyecto_infovis/src/components/MainViz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nimport {\n    Box,\n    Typography,\n    IconButton,\n    Card,\n    CardContent,\n    Grid,\n    LinearProgress,\n    Fade\n} from '@mui/material';\nimport { Play, Pause, Volume2, VolumeX } from 'lucide-react';\n\n// Sonidos\nconst goalSounds = {\n    regular: new Audio('/sounds/regular-goal.mp3'),\n    penalty: new Audio('/sounds/penalty.mp3'),\n    freekick: new Audio('/sounds/freekick.mp3'),\n    header: new Audio('/sounds/header.mp3')\n};\n\nObject.values(goalSounds).forEach(sound => {\n    sound.volume = 0.5; // Ajustar volumen al 50%\n});\n\nconst CareerPhases = {\n    'Formación (2002-2006)': {\n        color: '#4CAF50',\n        description: 'Inicio de carrera en Sporting CP y primeros años en Manchester United',\n        sound: 'regular'\n    },\n    'Ascenso (2007-2009)': {\n        color: '#2196F3',\n        description: 'Consolidación en Manchester United y primer Balón de Oro',\n        sound: 'header'\n    },\n    'Dominio (2010-2018)': {\n        color: '#FFC107',\n        description: 'Era dorada en Real Madrid',\n        sound: 'freekick'\n    },\n    'Madurez (2019-2022)': {\n        color: '#9C27B0',\n        description: 'Etapa en Juventus y regreso a Manchester United',\n        sound: 'penalty'\n    },\n    'Etapa Final (2023-)': {\n        color: '#FF5722',\n        description: 'Periodo en Al-Nassr',\n        sound: 'regular'\n    }\n};\n\nconst getPhaseForYear = (year) => {\n    if (year <= 2006) return 'Formación (2002-2006)';\n    if (year <= 2009) return 'Ascenso (2007-2009)';\n    if (year <= 2018) return 'Dominio (2010-2018)';\n    if (year <= 2022) return 'Madurez (2019-2022)';\n    return 'Etapa Final (2023-)';\n};\n\nconst MainViz = ({ data }) => {\n    const [selectedYear, setSelectedYear] = useState(null);\n    const [selectedPhase, setSelectedPhase] = useState(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    const [playbackIndex, setPlaybackIndex] = useState(0);\n    const playbackRef = useRef(null);\n\n    const yearlyData = Object.entries(data.anos)\n        .map(([year, goals]) => {\n            const phase = getPhaseForYear(parseInt(year));\n            return {\n                year: parseInt(year),\n                goals,\n                phase,\n                phaseColor: CareerPhases[phase].color\n            };\n        })\n        .sort((a, b) => a.year - b.year);\n\n    const totalGoals = Object.values(data.clubes).reduce((a, b) => a + b, 0);\n\n    const playGoalSound = (goals, phase) => {\n        if (!isMuted) {\n            const sound = goalSounds[CareerPhases[phase].sound];\n            sound.currentTime = 0;\n            sound.play().catch(error => console.log('Error playing sound:', error));\n        }\n    };\n\n    useEffect(() => {\n        if (isPlaying) {\n            const playStep = () => {\n                if (playbackIndex < yearlyData.length) {\n                    const currentData = yearlyData[playbackIndex];\n                    setSelectedYear(currentData.year);\n                    playGoalSound(currentData.goals, currentData.phase);\n                    setPlaybackIndex(prev => prev + 1);\n                    playbackRef.current = setTimeout(playStep, 1000);\n                } else {\n                    setIsPlaying(false);\n                    setPlaybackIndex(0);\n                }\n            };\n\n            playbackRef.current = setTimeout(playStep, 1000);\n        }\n\n        return () => {\n            if (playbackRef.current) {\n                clearTimeout(playbackRef.current);\n            }\n        };\n    }, [isPlaying, playbackIndex]);\n\n    const handlePlayPause = () => {\n        if (!isPlaying && playbackIndex >= yearlyData.length) {\n            setPlaybackIndex(0);\n        }\n        setIsPlaying(!isPlaying);\n    };\n\n    const handlePhaseClick = (phase) => {\n        setSelectedPhase(phase === selectedPhase ? null : phase);\n    };\n\n    const handleDataClick = (data) => {\n        if (data && data.activePayload) {\n            const payload = data.activePayload[0].payload;\n            setSelectedYear(payload.year);\n            playGoalSound(payload.goals, payload.phase);\n        }\n    };\n\n    return (\n        <Box sx={{ maxWidth: '1200px', margin: '0 auto', p: 3 }}>\n            <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ color: '#00BFFF' }}>\n                La Carrera Goleadora de Cristiano Ronaldo\n            </Typography>\n\n            <Grid container spacing={3}>\n                {/* Fases de Carrera */}\n                <Grid item xs={12}>\n                    <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)', mb: 3 }}>\n                        <CardContent>\n                            <Grid container spacing={2}>\n                                {Object.entries(CareerPhases).map(([phase, { color, description }]) => (\n                                    <Grid item xs={12} md={2.4} key={phase}>\n                                        <Box\n                                            onClick={() => handlePhaseClick(phase)}\n                                            sx={{\n                                                cursor: 'pointer',\n                                                p: 1,\n                                                borderRadius: 1,\n                                                bgcolor: selectedPhase === phase ? `${color}22` : 'transparent',\n                                                '&:hover': { bgcolor: `${color}11` }\n                                            }}\n                                        >\n                                            <Box sx={{ width: '100%', height: 4, bgcolor: color, mb: 1 }} />\n                                            <Typography variant=\"body2\" sx={{ color: color }}>\n                                                {phase}\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                {/* Gráfico Principal */}\n                <Grid item xs={12}>\n                    <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)' }}>\n                        <CardContent>\n                            <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mb: 2 }}>\n                                <IconButton\n                                    onClick={handlePlayPause}\n                                    sx={{\n                                        bgcolor: 'primary.main',\n                                        '&:hover': { bgcolor: 'primary.dark' },\n                                        color: 'white'\n                                    }}\n                                >\n                                    {isPlaying ? <Pause /> : <Play />}\n                                </IconButton>\n                                <IconButton\n                                    onClick={() => setIsMuted(!isMuted)}\n                                    sx={{\n                                        bgcolor: 'primary.main',\n                                        '&:hover': { bgcolor: 'primary.dark' },\n                                        color: 'white'\n                                    }}\n                                >\n                                    {isMuted ? <VolumeX /> : <Volume2 />}\n                                </IconButton>\n                            </Box>\n\n                            <ResponsiveContainer width=\"100%\" height={400}>\n                                <LineChart\n                                    data={yearlyData}\n                                    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n                                    onClick={handleDataClick}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#444\" />\n                                    <XAxis\n                                        dataKey=\"year\"\n                                        stroke=\"#fff\"\n                                        tickFormatter={(year) => `'${year.toString().slice(2)}`}\n                                    />\n                                    <YAxis stroke=\"#fff\" />\n                                    <Tooltip\n                                        content={({ active, payload }) => {\n                                            if (active && payload?.length) {\n                                                const data = payload[0].payload;\n                                                return (\n                                                    <Box sx={{ bgcolor: 'rgba(0,0,0,0.9)', p: 2, borderRadius: 1 }}>\n                                                        <Typography sx={{ color: data.phaseColor }}>\n                                                            {data.phase}\n                                                        </Typography>\n                                                        <Typography variant=\"h6\" sx={{ color: '#fff' }}>\n                                                            {data.year}: {data.goals} goles\n                                                        </Typography>\n                                                    </Box>\n                                                );\n                                            }\n                                            return null;\n                                        }}\n                                    />\n                                    <Line\n                                        type=\"monotone\"\n                                        dataKey=\"goals\"\n                                        stroke=\"#00bfff\"\n                                        strokeWidth={2}\n                                        dot={({ payload }) => (\n                                            <circle\n                                                r={payload.year === selectedYear ? 6 : 4}\n                                                fill={payload.phaseColor}\n                                                stroke=\"#fff\"\n                                                strokeWidth={payload.year === selectedYear ? 2 : 0}\n                                            />\n                                        )}\n                                        activeDot={{ r: 8, fill: \"#fff\" }}\n                                    />\n                                </LineChart>\n                            </ResponsiveContainer>\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                {/* Detalles */}\n                {selectedYear && (\n                    <Grid item xs={12}>\n                        <Fade in>\n                            <Card sx={{ bgcolor: 'rgba(0,0,0,0.6)' }}>\n                                <CardContent>\n                                    <Grid container spacing={3}>\n                                        <Grid item xs={12} md={4}>\n                                            <Typography variant=\"h6\" gutterBottom>\n                                                Año {selectedYear}\n                                            </Typography>\n                                            <Typography variant=\"body1\">\n                                                {yearlyData.find(d => d.year === selectedYear)?.goals} goles\n                                            </Typography>\n                                            <Typography variant=\"body2\" sx={{ mt: 1, color: '#666' }}>\n                                                {CareerPhases[getPhaseForYear(selectedYear)].description}\n                                            </Typography>\n                                        </Grid>\n\n                                        <Grid item xs={12} md={8}>\n                                            <Typography variant=\"subtitle1\" gutterBottom>\n                                                Proporción de goles por tipo en carrera completa\n                                            </Typography>\n                                            {Object.entries(data.tipos_goles).map(([tipo, cantidad]) => {\n                                                const porcentaje = (cantidad / totalGoals) * 100;\n                                                return (\n                                                    <Box key={tipo} sx={{ mb: 2 }}>\n                                                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                                                            {tipo}: {cantidad} ({porcentaje.toFixed(1)}%)\n                                                        </Typography>\n                                                        <LinearProgress\n                                                            variant=\"determinate\"\n                                                            value={porcentaje}\n                                                            sx={{\n                                                                height: 8,\n                                                                borderRadius: 4,\n                                                                bgcolor: 'rgba(255,255,255,0.1)',\n                                                                '& .MuiLinearProgress-bar': {\n                                                                    bgcolor: CareerPhases[getPhaseForYear(selectedYear)].color\n                                                                }\n                                                            }}\n                                                        />\n                                                    </Box>\n                                                );\n                                            })}\n                                        </Grid>\n                                    </Grid>\n                                </CardContent>\n                            </Card>\n                        </Fade>\n                    </Grid>\n                )}\n            </Grid>\n        </Box>\n    );\n};\n\nexport default MainViz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}